<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>security - 标签 - Shiori&#39;s Blog</title>
        <link>https://KanShiori.github.io/tags/security/</link>
        <description>security - 标签 - Shiori&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 13 Jun 2022 21:29:19 &#43;0800</lastBuildDate><atom:link href="https://KanShiori.github.io/tags/security/" rel="self" type="application/rss+xml" /><item>
    <title>Certificate 总结</title>
    <link>https://KanShiori.github.io/posts/net/certificate/</link>
    <pubDate>Mon, 13 Jun 2022 21:29:19 &#43;0800</pubDate>
    <author>Shiori</author>
    <guid>https://KanShiori.github.io/posts/net/certificate/</guid>
    <description><![CDATA[1 基本原理 签发证书本质上是：使用 CA 的私钥给申请的公钥进行签名 从签发证书的角度看，设计到两个对象： CA - 签发证书的机构 root cert - CA 证书（包含 CA 公钥）]]></description>
</item>
<item>
    <title>凭证机制 Credential</title>
    <link>https://KanShiori.github.io/posts/net/credentials/</link>
    <pubDate>Mon, 25 Oct 2021 13:16:57 &#43;0000</pubDate>
    <author>Shiori</author>
    <guid>https://KanShiori.github.io/posts/net/credentials/</guid>
    <description><![CDATA[在授权过程中，基本每种授权模式目的就是为了得到一个令牌，令牌就是 <strong><ruby>凭证<rt>Credential</rt></ruby></strong>。目前主流有两种令牌实现方式：Cookie]]></description>
</item>
<item>
    <title>授权机制 Authorization</title>
    <link>https://KanShiori.github.io/posts/net/authorization/</link>
    <pubDate>Sun, 24 Oct 2021 09:05:39 &#43;0000</pubDate>
    <author>Shiori</author>
    <guid>https://KanShiori.github.io/posts/net/authorization/</guid>
    <description><![CDATA[认证解决了对用户身份认证的问题，授用于解决用户有着哪些权限的问题。涉及两个独立的问题： 确保授权的过程可靠 - 常用 OAuth2 和 SAML 2.0 确保授权的结果可控 - 常]]></description>
</item>
<item>
    <title>认证机制 Authentication</title>
    <link>https://KanShiori.github.io/posts/net/authentication/</link>
    <pubDate>Sat, 23 Oct 2021 15:20:07 &#43;0000</pubDate>
    <author>Shiori</author>
    <guid>https://KanShiori.github.io/posts/net/authentication/</guid>
    <description><![CDATA[文章内容来自于《凤凰架构》，推荐阅读。 <strong><ruby>认证<rt>Authentication</rt></ruby></strong> 用来解决系统对用户身份认证的问题，例如用户密码就是最简单的认]]></description>
</item>
<item>
    <title>SSL/TLS 总结</title>
    <link>https://KanShiori.github.io/posts/net/ssl-tls-cert/</link>
    <pubDate>Sat, 01 May 2021 15:09:13 &#43;0000</pubDate>
    <author>Shiori</author>
    <guid>https://KanShiori.github.io/posts/net/ssl-tls-cert/</guid>
    <description><![CDATA[1 密码套件 SSL 在握手的第一步就是确认所使用的<strong><ruby>密码套件<rt>Cipher Suite</rt></ruby></strong>，使得首先 client 与 server 使用相同的算法进行通信。其中包含三个组件：]]></description>
</item>
</channel>
</rss>
