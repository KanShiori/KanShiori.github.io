<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Shiori&#39;s Blog</title>
        <link>https://KanShiori.github.io/</link>
        <description>Shiori&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 25 Oct 2021 13:16:57 &#43;0000</lastBuildDate>
            <atom:link href="https://KanShiori.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>凭证 Credential</title>
    <link>https://KanShiori.github.io/posts/security/credentials/</link>
    <pubDate>Mon, 25 Oct 2021 13:16:57 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://KanShiori.github.io/posts/security/credentials/</guid>
    <description><![CDATA[在授权过程中，基本每种授权模式目的就是为了得到一个令牌，令牌就是 <strong><ruby>凭证<rt>Credential</rt></ruby></strong>。目前主流有两种令牌实现方式：Cookie]]></description>
</item><item>
    <title>授权 Authorization</title>
    <link>https://KanShiori.github.io/posts/security/authorization/</link>
    <pubDate>Sun, 24 Oct 2021 09:05:39 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://KanShiori.github.io/posts/security/authorization/</guid>
    <description><![CDATA[认证解决了对用户身份认证的问题，授用于解决用户有着哪些权限的问题。涉及两个独立的问题： 确保授权的过程可靠 - 常用 OAuth2 和 SAML 2.0 确保授权的结果可控 - 常]]></description>
</item><item>
    <title>认证 Authentication</title>
    <link>https://KanShiori.github.io/posts/security/authentication/</link>
    <pubDate>Sat, 23 Oct 2021 15:20:07 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://KanShiori.github.io/posts/security/authentication/</guid>
    <description><![CDATA[文章内容来自于《凤凰架构》，推荐阅读。 <strong><ruby>认证<rt>Authentication</rt></ruby></strong> 用来解决系统对用户身份认证的问题，例如用户密码就是最简单的认]]></description>
</item><item>
    <title>AWS 学习 - 1 - 地理概念</title>
    <link>https://KanShiori.github.io/posts/cloud_computing/aws_learning/1-introduction/</link>
    <pubDate>Fri, 01 Oct 2021 12:08:32 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://KanShiori.github.io/posts/cloud_computing/aws_learning/1-introduction/</guid>
    <description><![CDATA[1 Region 将所有的资源都放在一个 Data Center（简称 DC）不能保证可用性，如果该数据中心出现问题，那么意味所有的应用程序出现问题。 为此，AWS 在世]]></description>
</item><item>
    <title>K8s 实践 - Network Across Cluster</title>
    <link>https://KanShiori.github.io/posts/cloud_computing/k8s_practice/across-kubernetes/</link>
    <pubDate>Thu, 30 Sep 2021 07:25:32 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://KanShiori.github.io/posts/cloud_computing/k8s_practice/across-kubernetes/</guid>
    <description><![CDATA[Kubernetes 实践 主要记录一些自己的一些部署实践。 1 目标 最近在看 TiDB 的 Multi Kubernetes 集群部署方案，TiDB 本身是灵活扩容的分布式数据库，因此部署前需要确保 Multi Kubernetes 之间服]]></description>
</item><item>
    <title>K8s 编程 - 8 - Custom Scheduler</title>
    <link>https://KanShiori.github.io/posts/cloud_computing/k8s_programming/8-extend-scheduler/</link>
    <pubDate>Wed, 22 Sep 2021 12:19:47 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://KanShiori.github.io/posts/cloud_computing/k8s_programming/8-extend-scheduler/</guid>
    <description><![CDATA[kube-scheduler 负责集群资源的调度，原生的 Kubernetes Scheduler 可以满足大多数情况的需求。不过针对于不同业务的特殊的调度需求，Kubernetes 提供了多种扩展调度器的方式]]></description>
</item><item>
    <title>K8s 编程 - 7 - Admission Webhook</title>
    <link>https://KanShiori.github.io/posts/cloud_computing/k8s_programming/7-admission-webhook/</link>
    <pubDate>Tue, 21 Sep 2021 06:58:07 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://KanShiori.github.io/posts/cloud_computing/k8s_programming/7-admission-webhook/</guid>
    <description><![CDATA[Kubernetes 编程系列 主要记录一些开发 Controller 所相关的知识，大部分内容来自于《Programming Kubernetes》（推荐直接阅读）。 下面代码都来自于 a]]></description>
</item><item>
    <title>K8s 编程 - 6 - Custom APIServer</title>
    <link>https://KanShiori.github.io/posts/cloud_computing/k8s_programming/6-custom-api-server/</link>
    <pubDate>Sun, 22 Aug 2021 07:32:49 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://KanShiori.github.io/posts/cloud_computing/k8s_programming/6-custom-api-server/</guid>
    <description><![CDATA[Kubernetes 编程系列 主要记录一些开发 Controller 所相关的知识，大部分内容来自于《Programming Kubernetes》（推荐直接阅读）。 Custom APIServer 可以作为 CRD 的替]]></description>
</item><item>
    <title>K8s 编程 - 5 - 发布 Operator</title>
    <link>https://KanShiori.github.io/posts/cloud_computing/k8s_programming/5-shipping-controllers/</link>
    <pubDate>Fri, 20 Aug 2021 14:53:38 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://KanShiori.github.io/posts/cloud_computing/k8s_programming/5-shipping-controllers/</guid>
    <description><![CDATA[Kubernetes 编程系列 主要记录一些开发 Controller 所相关的知识，大部分内容来自于《Programming Kubernetes》（推荐直接阅读）。 1 打包 1.1 Helm Helm 已经成]]></description>
</item><item>
    <title>K8s 编程 - 4 - 代码生成</title>
    <link>https://KanShiori.github.io/posts/cloud_computing/k8s_programming/4-generate-code/</link>
    <pubDate>Thu, 19 Aug 2021 14:41:24 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://KanShiori.github.io/posts/cloud_computing/k8s_programming/4-generate-code/</guid>
    <description><![CDATA[Kubernetes 编程系列 主要记录一些开发 Controller 所相关的知识，大部分内容来自于《Programming Kubernetes》（推荐直接阅读）。 最简单的方式是调用]]></description>
</item></channel>
</rss>
