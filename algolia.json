[
    {
        "title": "关于",
        "uri": "about",
        "content": "Hugo              LoveIt  Logo   gopherize me         realfavicongenerator net",
        "objectID": "about",
        "date": "2020-10-15T12:10:35.000Z",
        "draft": false,
        "lightgallery": true,
        "math": {
            "enable": true
        }
    },
    {
        "title": "AWS 学习 - 1 - 地理概念",
        "uri": "posts/cloud_computing/aws_learning/1-introduction",
        "content": "1 Region             Data Center    DC                                         AWS                 DC        Region    us west us east eu west       Region                   Region                                                Regional    Zonal    Regional Service      Region     AZ       AWS     Service       2 Available Zone Region     Available Zone    AZ  AZ            DC    us west 1 us west 2       Region      AZ                  AZ             3 Region AZ DC                          Region      AZ    AZ               AZ         IDC                      Region      AZ      4 Edge Location Edge Location                                   CloudFront   Route53        Edge Location       5      AWS                                            aws amazon com   21   Region       Region      AWS                   amazonaws cn           Region                 govcloud",
        "objectID": "posts/cloud_computing/aws_learning/1-introduction",
        "date": "2021-06-23T14:13:47.000Z",
        "description": "AWS 云计算中地理相关概念",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "lightgallery": true,
        "tags": [
            "aws",
            "net"
        ],
        "categories": [
            "AWS 学习"
        ]
    },
    {
        "title": "AWS 学习 - 3 - Network",
        "uri": "posts/cloud_computing/aws_learning/3-network",
        "content": "1 VPC   Subnet             VPC   Virtual Private Cloud       VPC     Region      VPC      CIDR                             VPC                         Subnet   Instance           Subnet              Subnet     AZ          Subnet     AZ     1 1 Default   Nondefault      Region             Default VPC  Default VPC            Internet Gateway Default Network ACL    AZ    Default Subnet     instance      VPC          Default VPC   Default Subnet            VPC   Subnet     Nondefault VPC    Nondefault Subnet  1 2 Public   Private      Internet Gateway   Subnet    Public Subnet        Private Subnet           Public   Private     Route Table      Route Table             Internet Gateway             VPC         Internet Gateway              Public VPC                Private VPC  2 Elastic IP   Instance     IP    VPC        Private IP    Subnet     Auto assign public IPv4 address      Instance          Instance     Public IP      Instance     Public IP          IP               IP      Public IP             Elastic IP  Public IP   Elastic IP        Public IP              Instance          Elastic IP                  Instance        Instance                Instance          IP            Private IP Public IP        AWS                VPC    IPv6         Instance       IPv6         IPv6                IP     IPv4 IPv6             3 Route Table    Subnet         Route Table    Subnet           Route Table     VPC           Main Route Table       Route Table   Subnet       Main Route Table       Route Table     Custom Route Table     Route Table              Subnet Route Table      Subnet Gateway Route Table      Internet Gateway Local Gateway Route Table      Local Gateway Route Table        Rule       Route Table      Destination   Target   Status   Propagated         172 31 0 0 16   local   Active   No 0 0 0 0 0   igw 3518715d   Active   No Destination                  0 0 0 0 0  CIDR      pl id  Prefix Lists Target                       local   Subnet    igw id   Internet Gateway nat gateway id   NAT Device vgw id   Virtual Private Gateway lgw id   Outposts Local Gateway cagw id   Carrier Gateway pcx id   VPC Peering Connection eigw id   Egress only Internet Gateway tgw id   Transit Gateway eni id   Network Interface vpce id   Gateway Endpoint vpc endpoint id   VPC Endpoint          Propagated       Virtual Private Gateway        Route Table                        Subnet        VPC       Subnet                   Route Table     Subnet         AWS           4 Security Group Security Group     ENI                           Instance    Security Group       Instance     eth0          4 1 Rule    Inbound                       Security Group           Outbound                                                   Rule      Type   Protocol   Port Range   Destination Source   Description           SSH   TCP   22   0 0 0 0 0   Allow SSH Type               Protocol     TCP UDP ICMP Port Range          ALL        Destination Source                     Inbound Rule    Source    Outbound Rule    Destination       Security Group            Outbound                               conntrack             5 ACL Network ACL          Subnet                 Subnet               VPC              Network ACL     Network ACL   Subnet       ACL  Network ACL                        5 1 Rule     Network ACL                Network ACL             Network ACL   Rule      Rule Number   Type   Protocol   Port Range   Destination Source   Allow Deny             100   Custome TCP   TCP   123   0 0 0 0 0   Allow      traffic       0 0 0 0 0   Deny Rule Number        Type             Protocol        Port Range          Destination Source                   Inbound Rule    Source    Outbound    Destination Allow Deny                   Rule Number                      Rule          Rule             100       Rule                   6 DNS     VPC      Route 53 Resolver    DNS         Instance     IP        IPv6    DNS          IP     IP              VPC   enableDnsSupport       DNS            Private DNS        VPC        IP         Region us east 1     ip  ec2 internal    Region     ip  compute internal Public DNS                   Region us east 1     ec2  compute 1 amazonaws com    Region     ec2  region compute amazonaws com             VPC   enableDnsHostnames       Public IP    DNS           7 Internet Gateway Internet Gateway     VPC                          Instance     Instance              Internet Gateway     VPC    Route Table     Instance        Internet Gateway  Instance      IP      Public IP Elastic IP   IPv6  Security Group   Network ACL      Instance           Instance    Public IP   Elastic IP       Internet Gateway         Outbound    Internet Gateway           Private IP       Public IP Elastic IP        Inbound    Internet Gateway              Public IP Elastic IP           Private IP     Instance               Public IP   Elastic IP       Internet Gateway        Instance               IP                     IP     IP              8 Egress only Internet Gateway   Instance    IPv6          Internet Gateway         IPv6                   IPv6    Instance    ",
        "objectID": "posts/cloud_computing/aws_learning/3-network",
        "date": "2021-10-01T12:08:32.000Z",
        "description": "AWS VPC 相关概念",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "aws",
            "net"
        ],
        "categories": [
            "AWS 学习"
        ]
    },
    {
        "title": "AWS 学习 - 4 - IAM",
        "uri": "posts/cloud_computing/aws_learning/4-iam",
        "content": "AWS                    AWS         IAM             IAM               Authentication                         Authorization                               Entity       User User Group Role     Entity  1   AWS          AWS                      AWS API                       Console   Username   Password      CLI   Access Key   Secret Key       AK SK  SDK   AK SK AWS Service   Assume Role     API          Region   AWS API               IAM               CloudTrail                    API                               SK                                                        AWS           AK                 SK             AK                                                                           5min                    AK          SK                                             AK SK      AWS     2 Root User   IAM User   User Group 2 1 Root User    AWS Account           Root User            Root User                    Root User          MFA                          AWS Organization        Account   Root User     Service Control Policy                Account      Root User    Admin IAM User               Admin IAM User       IAM User  2 2 IAM User IAM User    AWS      IAM        IAM Policy                                     IAM User       Username Password   AK SK    IAM User       AK SK                                            IAM User        User  2 3 User Group           User              User     User Group       IAM Policy       Group     Group      User            2 4 Service Control Policy    AWS Organization      Account   Organization      Service Control Policy         Account       Account     Entity         Policy    Root User    Service Control Policy    Policy      IAM    Policy             3 Policy Policy               Policy     User Role         AWS               Policy                          Policy        Resource based Policy                   Version    2012 10 17    Statement        Action    ec2      Effect    Allow    Resource             Effect    Allow    Action    iam CreateServiceLinkedRole    Resource         Condition      StringEquals      iam AWSServiceName      autoscaling amazonaws com    ec2scheduled amazonaws com    elasticloadbalancing amazonaws com    spot amazonaws com    spotfleet amazonaws com    transitgateway amazonaws com              Statement                      Effect          Allow Deny  Action NotAction          API               ec2 start    Resource NotResource                   ARN     Condition                           Principal        Resource based Policy       User Service          Resource   Principal Resource        Principal             Principal     Condition           3 1 Policy        Policy           AWS        AWS                                                               User Role       Policy          Policy          Identity based Policy              Policy      User Role             Resource based Policy                    Policy                      S3 Bucket Policy         Entity           Lambda Policy      Entity        Lambda  4 Role User         Username Password   AK SK                 Role                     AWS    Assume Role          AWS        User      User        User Assume Role          AWS           Role            Role    Policy     Role    User Service    Assume Role     Assume Role                     Revoke                       Role      Policy       Role      User    Resource    User Resource              Role             4 1 Trust Relationship      User Service      Assume Role         Role     Role   Trust Relationship             Assume    Role  Trust Relationship        Policy       sts AssumeRole sts AssumeRoleWithWebIdentity API        Assume         Version    2012 10 17    Statement        Effect    Allow    Principal      Service    ec2 amazonaws com      Action    sts AssumeRole        4 2 Session Policy    Assume Role            Session Policy      Assume Role         Policy    Session Policy           4 3 Assume Role Assume Role        sts AssumeRole sts AssumeRoleWithWebIdentity    API        Trust Relationship       IAM    Policy   Assume     User Service       AK SK   Token                                 AWS               AWS STS      5 Permission Boundary       Admin User    Entity    Policy                          IAM   User           User           Permission Boundary          Entity         Policy     User Role             Permission Boundary              Permission Boundary    Permission Boundary                  User Role     User   Policy              iam CreateUser   API          Permission Boundary     Effect    Allow    Action                User      API  iam CreateUser            Condition      StringEqua1s      iam permissionsBoundary    arn aws iam  ACCOUNT_ID policy PolicyX           Permission Boundary         Policy       5 Policy                IAM      Policy  Identity based Policy Resource based Policy Session Policy Permission Boundary Service Control Policy    IAM    API             Policy                                                         Policy       Deny        Deny                      ",
        "objectID": "posts/cloud_computing/aws_learning/4-iam",
        "date": "2021-10-28T13:47:56.000Z",
        "description": "AWS IAM 相关概念",
        "weight": 4,
        "lightgallery": true,
        "author": "Shiori",
        "tags": [
            "aws"
        ],
        "categories": [
            "AWS 学习"
        ]
    },
    {
        "title": "容器启停原理总结",
        "uri": "posts/cloud_computing/how_docker_work/容器启停原理总结",
        "content": "ubuntu 20 04 1 LTS       docker         docker version Client  Version  19 03 8 API version  1 40 Go version  go1 13 8 Git commit  afacb8b7f0 Built  Wed Oct 14 19 43 43 2020 OS Arch  linux amd64 Experimental  false Server  Engine  Version  19 03 8 API version  1 40  minimum version 1 12  Go version  go1 13 8 Git commit  afacb8b7f0 Built  Wed Oct 14 16 41 21 2020 OS Arch  linux amd64 Experimental  false containerd  Version  1 3 3 0ubuntu2 GitCommit  runc  Version  spec  1 0 1 dev GitCommit  docker init  Version  0 18 0 GitCommit  1    1 1 Create    docker create                                    create                                 RWLayer                          1                                              2                                  rootfs                   docker                root                                 init                                     etc resolve conf  etc hosts                                                                          hostname nameserver    docker            docker                     init                                       docker save       etresolve conf                    init                                        COW                                 storagedriver                   init               union mount                           docker create   rm  t ubuntu 361c520da78f848d639d65f042fcf5d448c13cbc4ce8c251dcba2250162b48fe inspect                  docker inspect 361c520da78f    GraphDriver      Data      LowerDir     var lib docker overlay2 d063d1d9c81d0c72d7384ea999dbd77b33d04b942ef94a5aabc6fb6cf984194c init diff  var lib docker overlay2 0336c489d40e65588748265a95f18328ddb1f5bcb9ebf10909fbf3f5f35b9496 diff  var lib docker overlay2 77d3ac91877751678bfec0576dab39ccd4b73666f8040aef387ef47ff30b4cf1 diff  var lib docker overlay2 ec8326178c990b52970a65371fd375737fdf256db597aa821a2b0f7d79bcc6f3 diff  var lib docker overlay2 385038374d3d369e98724926d0e1c240dcb74e31b1663ec1cb434c43ca2826f1 diff    MergedDir     var lib docker overlay2 d063d1d9c81d0c72d7384ea999dbd77b33d04b942ef94a5aabc6fb6cf984194c merged    UpperDir     var lib docker overlay2 d063d1d9c81d0c72d7384ea999dbd77b33d04b942ef94a5aabc6fb6cf984194c diff    WorkDir     var lib docker overlay2 d063d1d9c81d0c72d7384ea999dbd77b33d04b942ef94a5aabc6fb6cf984194c work      Name    overlay2         ls  var lib docker overlay2 d063d1d9c81d0c72d7384ea999dbd77b33d04b942ef94a5aabc6fb6cf984194c  diff link lower work                   var lib docker  driver            driver                          driver    overlay2       diff work                    diff               var lib docker overlay2                          xxx init         init         diff                 ls  var lib docker overlay2 d063d1d9c81d0c72d7384ea999dbd77b33d04b942ef94a5aabc6fb6cf984194c init committed diff link lower work   tree  var lib docker overlay2 d063d1d9c81d0c72d7384ea999dbd77b33d04b942ef94a5aabc6fb6cf984194c init diff  var lib docker overlay2 d063d1d9c81d0c72d7384ea999dbd77b33d04b942ef94a5aabc6fb6cf984194c init diff     dev       console       pts       shm     etc     hostname     hosts     mtab     proc mounts     resolv conf                    mount                      3            docker create      docker ps  a              inspect                create                          var lib docker containers                     ID    cd  var lib docker containers    ls 361c520da78f848d639d65f042fcf5d448c13cbc4ce8c251dcba2250162b48fe   ls 361c520da78f848d639d65f042fcf5d448c13cbc4ce8c251dcba2250162b48fe checkpoints config v2 json hostconfig json config v2 json                        var lib docker containers                                       docker daemon                 docker daemon                                docker daemon                  container        1 2 Start    docker start                            Create   Stop          Start       rootfs              init        union mount             containerd          docker run     docker create   docker run             2  rootfs     rootfs                           init           union mount            union mount                                                                                                                     docker start 361c520da78f 361c520da78f    mount              union mount         mount   overlay  var lib docker overlay2 d063d1d9c81d0c72d7384ea999dbd77b33d04b942ef94a5aabc6fb6cf984194c merged type overlay  rw relatime lowerdir  var lib docker overlay2 l O2TO66S3K4MTADSAAX6VXGTWSJ  var lib docker overlay2 l UHTTQ5AJKPR23Y3V7J4ZLOIFDR  var lib docker overlay2 l VWIFLRAQOPMH7LBAQQ5DDGIYVM  var lib docker overlay2 l LQBRTVETGGWVU2OHWC42443K7X  var lib docker overlay2 l 5PDNI5HSOH6UMUDNWF4VMR46TS upperdir  var lib docker overlay2 d063d1d9c81d0c72d7384ea999dbd77b33d04b942ef94a5aabc6fb6cf984194c diff workdir  var lib docker overlay2 d063d1d9c81d0c72d7384ea999dbd77b33d04b942ef94a5aabc6fb6cf984194c work xino off  nsfs  run docker netns 4500ea4f0025 type nsfs  rw    ls  lh  var lib docker overlay2 l O2TO66S3K4MTADSAAX6VXGTWSJ lrwxrwxrwx 1 root root 77 Nov 14 15 51  v",
        "objectID": "posts/cloud_computing/how_docker_work/容器启停原理总结",
        "date": "2020-11-13T07:45:03.000Z",
        "description": "容器启动背后的执行过程",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "docker",
            "container"
        ],
        "categories": [
            "Docker 原理总结"
        ]
    },
    {
        "title": "容器网络总结",
        "uri": "posts/cloud_computing/how_docker_work/容器网络总结",
        "content": "docker                1    docker          5         bridge            bridge        iptables                                host           net namespace            overlay     docker daemon      overlay         docker daemon              macvlan    macvlan                                           none                    driver                                          net namespace   docker                                          ubuntu 20 04     5 4 0 52 generic     docker        docker version Client  Version  19 03 8 API version  1 40 Go version  go1 13 8 Git commit  afacb8b7f0 Built  Wed Oct 14 19 43 43 2020 OS Arch  linux amd64 Experimental  false Server  Engine  Version  19 03 8 API version  1 40  minimum version 1 12  Go version  go1 13 8 Git commit  afacb8b7f0 Built  Wed Oct 14 16 41 21 2020 OS Arch  linux amd64 Experimental  false containerd  Version  1 3 3 0ubuntu2 GitCommit  runc  Version  spec  1 0 1 dev GitCommit  docker init  Version  0 18 0 GitCommit  2      2 1 cgroup   namespace                       2 2 docker      net namespace namespace                       host   container               net namespace        net namespace              iptables net_filter           net namespace                                     namespace                   docker           net namespace                           namespace                      namespace           mount                                       mount   nsfs  run docker netns 9779108cb6b0 type nsfs  rw          net namespace               netns inode      inode         docker top br0_container UID PID PPID C STIME TTY TIME CMD root 92658 92640 0 Nov06 pts 0 00 00 00  bin bash   ls  lhi  proc 92658 ns net 474863 lrwxrwxrwx 1 root root 0 Nov 7 12 42  proc 92658 ns net     net  4026532287      inode     net    inode      ls  lhi  run docker netns 9779108cb6b0 4026532287  r  r  r   1 root root 0 Nov 6 19 47  run docker netns 9779108cb6b0            net namespace                          namespace                      2 3 bridge        bridge                               bridge               bridge                                     brdige         IP   bridge    IP                                 IP           net_filter          bridge        Linux         bridge         2 4 veth pair        veth pair                     veth           veth     veth pair             net namespace          net namespace            veth                  veth       bridge               bridge          veth pair          Linux         veth      2 5 macvlan        macvlan          mac     ip        net namespace                               macvlan                bridge private          macvlan               macvlan          Linux interfaces virtual networking 3 Bridge    3 1       Bridge     1                   bridge       docker              docker network create   driver bridge     subnet 192 168 100 0 24     ip range 192 168 100 0 26     gateway 192 168 100 1     opt com docker network bridge name mybr0   mybridge0 2e61a7dc333c1bc61d9cb86503ce4cd5a7435977ea2f9b7cc97fc71ae0e2bb93   driver bridge         driver    subnet 192 168 100 0 24      bridge          ip range 192 168 100 0 26            ip                       gateway 192 168 100 1          IP    opt com docker network bridge name mybr0        bridge        mybridge0      docker network         ifconfig      bridge             bridge                      IP       gateway IP    ifconfig   mybr0  flags 4099 mtu 1500 inet 192 168 100 1 netmask 255 255 255 0 broadcast 192 168 100 255 ether 02 42 46 8a cf 34 txqueuelen 0  Ethernet  RX packets 0 bytes 0  0 0 B  RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0  0 0 B  TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0     brctl show bridge name bridge id STP enabled interfaces mybr0 8000 0242efdb0984 no            bridge        bridge                                                                         iptables    NAT                                 iptables         nat   filter          nat                          iptables  t nat  L  nv Chain PREROUTING  policy ACCEPT 2 packets  88 bytes  target prot opt source destination DOCKER        0 0 0 0 0 0 0 0 0 0 ADDRTYPE match dst type LOCAL Chain INPUT  policy ACCEPT 2 packets  88 bytes  target prot opt source destination Chain OUTPUT  policy ACCEPT 124 packets  8797 bytes  target prot opt source destination DOCKER        0 0 0 0 0  127 0 0 0 8 ADDRTYPE match dst type LOCAL Chain POSTROUTING  policy ACCEPT 124 packets  8797 bytes  target prot opt source destination MASQUERADE       mybr0 192 168 100 0 24 0 0 0 0 0 Chain DOCKER  2 references  target prot opt source destination RETURN    mybr0   0 0 0 0 0 0 0 0 0 0 PREROUTING   OUTPUT                    DOCKER    POSTROUTING      mybridge0    192 168 100 0 24     ip    MASQUERADE                 ip          ip              mybr0        mybridge0               MASQUERADE     mybr0              mybr0               filter                in mybr0      filter         iptables  t filter  L  nv Chain INPUT  policy ACCEPT 61774 packets  79M bytes  Chain FORWARD  policy",
        "objectID": "posts/cloud_computing/how_docker_work/容器网络总结",
        "date": "2020-11-06T12:40:51.000Z",
        "description": "描述 docker 下容器网络模型与实现",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "docker",
            "container"
        ],
        "categories": [
            "Docker 原理总结"
        ]
    },
    {
        "title": "K8s 学习 - 1 - Pod",
        "uri": "posts/cloud_computing/k8s_learning/1-pod",
        "content": "1 Pod       Pod                                Borg                                                                                                   Pod                                                                           Pod     Supervisor goreman                                             Kubernetes             Pod        1 1 Pause        Pod          pause               infra     pause      k8s gcr io pause                                               namespace           namespace              namespace                         B                        B          B        A                                                Kubernetes                   pause             pause       namespace              pause     namespace     pause                                    pause     namespace          namespace            1 2         Pod         network uts ipc namespace               Pod          PID namespace                          Pod     spec shareProcessNamespace   true     pid namespace       Pod    Volume                                                                                   2 Dynamic Pod   Static Pod 2 1 Dynamic Pod             ReplicaSet    Deployment             Pod        Pod          Pod       Pod    Kubernetes             APIServer          Pod         Pod   Dynamic Pod   2 2 Static Pod         Pod         Pod   Static Pod      Pod      kubelet         kubelet   Node     Kubernetes                 kubelet                  Pod               HTTP     2 2 1          kubelet           staticPodPath       kubelet                yaml    json          Pod             kubelet        pod manifest path                           APIServer       Pod               Pod       Pending                   Pod               yaml     2 2 2 HTTP       kubelet         manifest url kubelet       URL            yaml   json              Pod  3 Pod       3 1 Pod phase Pod   status phase       Pod          status  phase  Running Pod                         Pending   Pod       Pod                Pending               Running   Pod                                     Succeeded   Pod                   0     Pod           Failed   Pod                                0   Unknown        Pod            Node                        kubectl pods     STATUS          phase    Pod              status containerStatuses   state  reason          Pod           kubectl pods  o yaml      status phase       3 2 Container State Kubernetes     Pod             status containerStatuses state                           Waiting                 image      init container        Running            Terminated                           status containerStatuses state                 3 2 1          Kubernetes                postStart                         entrypoint         kubelet     postStart                Running  preStop    kubelet                          preStop     kubelet                   kubelet                                         apiVersion  v1 kind  Pod metadata  name  lifecycle demo spec  containers  name  lifecycle demo container image  nginx lifecycle  postStart  httpGet  path    port  80 preStop  exec  command     bin sh    c   nginx  s quit  killall  0 nginx  sleep 1  done                      httpGet       HTTP     exec         3 3 Pod Condition Pod   status conditions     Pod                  condition  Conditon          PodScheduled   Pod               Initialized      Init Container         ContainersReady                    Ready   Pod                 Service   Endpoints    Ready      Readiness Probe      status  conditions  lastProbeTime  null lastTransitionTime   2021 06 11T07 11 46Z  status   True  type  Initialized lastProbeTime  null lastTransitionTime   2021 06 12T15 32 39Z  message   containers unready status   pd   reason  ContainersNotReady status   False  type  Ready lastProbeTime  null lastTransitionTime   2021 06 12T15 32 39Z  message   containers unready status   pd   reason  ContainersNotReady status   False  type  ContainersReady lastProbeTime  null lastTransitionTime   2021 06 11T07 11 46Z  status   True  type  PodScheduled        Condition           type  condition     status  condition         True False Unknown  lastProbeTime         condition      lastTransitionTime      condition status        reason      condition status        message      conditon status          3 3 1     condition       condition        spec readinessGates      condition      condition       controller          controller         condition     true      condition        Ready condition         condition   true   Ready condition      true  apiVersion  v1 kind  Pod metadata  name  centos spec  readinessGates  conditionType   www example com feature 1  3 4 Pod         spec restartPolicy    Pod               Always        kubelet          OnFailure            0   kubelet                 kubelet         kubelet                   1n 2n 4n         5min         10min                               kubelet handle             4 Probe Probe               Pod                 Pod                               LivenessProbe ReadinessProbe   StartupProbe",
        "objectID": "posts/cloud_computing/k8s_learning/1-pod",
        "date": "2021-06-05T16:29:21.000Z",
        "description": "Pod 基本概念",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 学习"
        ]
    },
    {
        "title": "K8s 学习 - 10 - API Server 认证",
        "uri": "posts/cloud_computing/k8s_learning/10-apiserver-auth",
        "content": "1    Kubernetes                 API Server        API Server           APIServer                  Authentication                       Authorization                           Admission Control            2 Subject       API Server          kubectl client   REST API               UserAccount   ServiceAccount       UserAccount   ServiceAccount                   APIServer       2 1 UserAccount UserAccount      Kubernetes                          Keystone    Google Account                   Kubernetes                 CA                Subject Common Name             CN bob   2 1 1    UserAccount          User        Kubernetes     Kubernetes        UserAccount         openssl genrsa  out shiori key 2048   openssl req  new  key shiori key  out shiori csr  subj   CN shiori    openssl x509  req  in shiori csr  CA  etc kubernetes pki ca crt  CAkey  etc kubernetes pki ca key  CAcreateserial  out shiori crt  days 3650   Kubernetes                        kubectl config set credentials shiori   client certificate   shiori crt   client key   shiori key   embed certs true User  shiori  set       context                           APIServer      kubectl config set context shiori kubernetes   cluster kubernetes   user shiori   kubectl config use context shiori kubernetes 2 2 ServiceAccount ServiceAccount   Kubernetes           Pod          Pod                        ServiceAccount     Pod                 ServiceAccount          apiVersion  v1 kind  ServiceAccount metadata  name  local storage admin namespace  kube system spec  automountServiceAccountToken  false spec automountServiceAccountToken             Secret    2 2 1 Service Account Atuh   Pod     Kubernetes APIServer       Kubernetes     HTTP Token      Service Account Auth          HTTP Bearer Token             APIServer     Pod                 APIServer                   Pod    run secrets kubernetes io serviceaccount ca crt        APIServer                   cat  etc kubernetes pki ca crt   kubectl exec  it   POD   c   CONTAINER     cat  run secrets kubernetes io serviceaccount ca crt    Pod           HTTP Header    Token           Pod      Token  Kubernetes Controller     APIServer       service account private key file          JWT Secret         Pod    run secrets kubernetes io serviceaccount token             ServiceAccount       Pod          run secrets kubernetes io serviceaccount ca crt  run secrets kubernetes io serviceaccount token  run secrets kubernetes io serviceaccount namespace Client     namespace      API        kubectl exec  it   POD   c   CONTAINER     ls  run secrets kubernetes io serviceaccount ca crt namespace token 2 2 2 ServiceAccount   Secret            Kubernetes Secret             ServiceAccount            Secret      Secret               kubectl secrets NAME TYPE DATA AGE default token 4l585 kubernetes io service account token 3 16d   kubectl secrets default token 4l585  o yaml apiVersion  v1 data  ca crt      namespace      token      kind  Secret metadata  annotations  kubernetes io service account name  default kubernetes io service account uid  a4d19cee 45e3 41ac af66 ca8b070fa5d9 creationTimestamp   2021 06 16T09 25 37Z  name  default token 4l585 namespace  tidb cluster dev resourceVersion   3996078  uid  a068d2ad 79b9 4b3c be8c c6e245c1865f type  kubernetes io service account token          Secret       token  type   kubernetes io service account token Secret        annotations         ServiceAccount  2 2 3    ServiceAccount Pod       spec serviceAccountName         ServiceAccount    default   spec      serviceAccountName  myserviceaccount                Pod          Client     HTTP             APIServer      TOKEN   cat token     curl  https   kubernetes default api v1 namespaces mycluster pods     cacert   ca crt  H  Authorization  Bearer  TOKEN     kind    PodList    apiVersion    v1    metadata      resourceVersion    1589287      items          3 Authentication APIServer           Authentication                          X509           Kubernetes              HTTP Bearer Token       Bearer Token        OpenID Connect Token             OIDC        Webhook Token         Webhook        Authenticating Proxy                                           APISever                  3 1 X509           APIServer         client ca file SOMEFILE                                                      Subject Common Name                       3 2 HTTP Bearer Token       APIServer         token auth file SOMEFILE           Token        CSV             token user uid  groupnames  31ada4df abedx a11z 123z 124sgtszxvr3 join 2  group1 group2  token   Token     user       uid      ID groupnames          HTTP    APIServer     HTTP Header   Token           APIServer       Token      Token                                ServiceAccount      Bearer Token          Token    Kubernetes             3 3 OpenID Connect Token       Kubernetes       OpenID Conntect       OIDC                OIDC             OIDC Sever         ID Token        APIServer APIServer       Token                        OIDC Token      APIServer               API     3 4 Webhook Token    Kubernetes         W",
        "objectID": "posts/cloud_computing/k8s_learning/10-apiserver-auth",
        "date": "2021-07-03T05:47:25.000Z",
        "description": "",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 学习"
        ]
    },
    {
        "title": "K8s 学习 - 2 - Service",
        "uri": "posts/cloud_computing/k8s_learning/2-service",
        "content": "1             Service          Pod                   IP                                               Service                   Service                            Web         3   Pod                                           Pod                                                             2 Service    2 1    Service          apiVersion  v1 kind  Service metadata  name  string namespace  string labels  name  string annotations  name  string spec  selector     type  string clusterIP  string sessionAffinity  string ports  name  string protocol  string port  int targetPort  int nodePort  int status  loadBalancer  ingress  ip  string hostname  string topologyKeys   key  externalName  string spec selector     Service        Pod  spec type   Service      Service      spec clusterIP                  spec sessionAffinity             spec ports                           NodePort      spec status     LoadBalancer             spec topologyKeys                         key   Node    Pod  spec externalName  ExternalName    service              2 2        k8s               RoundRobin                  Pod      SessionAffinity        IP                                  Pod                     Pod    spec sessionAffinity      ClientIP         SessionAffinity     2 3            Service           TCP                 Service UDP           Service LoadBalancer              HTTP             PROXY             SCTP   1 17          Service   Endpoint        spec ports   AppProtocol                               spec  ports  port  8080 targetPort  8080 AppProtocol  HTTP 3      Kubernetes                       Service             DNS  3 1           Pod   Service             namespace Service         ENV           Headless Service               _PORT           PORT _            PORT  ADDR     PORT  PORT     PORT  PROTO    SERVICEHOST    SERVICEPORT    SERVICEPORT_                   service spec port 0            port         xxxPORTxxx                    kubernetes   service       Pod     APIServer  3 2 DNS       Service          DNS             svc cluster    CoreDNS         DNS                  Service        spec ports   name                    svc       http tcp   svc local   DNS    spec  ports  protocol  TCP port  8080 targetPort  8080 name  http     nslookup            namespace        nslookup         namespace    DNS     4 Service    Service                                               Service     4      ClusterIP            Pod             ClusterIP   Port     VIP  NodePort  NodePort   ClusterIP        ClusterIP   Port     Node                        LoadBalancer  LoadBalancer   NodePort        Node          IP              Node  ExternalName            DNS          selector           Pod       ClusterIP NodePort LoadBalancer                  ExternalName             4 1 ClusterIP ClusterIP       Service      VIP   Port             Pod   Port       VIP             apiVersion  v1 kind  Service metadata  name  service python spec  ports  port  3000        protocol  TCP        targetPort  443        selector  run  pod python          Pod type  ClusterIP               IP    TCP 3000    443     Service       4 2 NodePort NodePort    ClusterIP                                                       kubectl port forward svc xxx                    Service         NodePort             service spec ports   nodePort             apiVersion  v1 kind  Service metadata  name  service python spec  ports  port  3000 protocol  TCP targetPort  443 nodePort  30080 selector  run  pod python type  NodePort       ClusterIP            30080             4 3 LoadBalancer         Node                    k8s                       k8s       NodePort               k8s              LoadBalancer Service   NodePort                                                     apiVersion  v1 kind  Service metadata  name  service python spec  ports  port  3000 protocol  TCP targetPort  443 nodePort  30080 selector  run  pod python type  LoadBalancer externalTrafficPolicy  Local spec externalTrafficPolicy spec                           LoadBalancer            service metadata annotations      metadata  name  my service annotations  service beta kubernetes io aws load balancer access log enabled   true  Specifies whether access logs enabled load balancer service beta kubernetes io aws load balancer access log emit interval   60  interval publishing access logs  specify interval either 5 60  minutes   service beta kubernetes io aws load balancer access log s3 bucket name   my bucket  name Amazon S3 bucket access logs stored service beta kubernetes io aws load balancer access log s3 bucket prefix   my bucket prefix prod  logical hierarchy created Amazon S3 bucket  example my bucket prefix prod    LoadBalancer            LoadBalancer  4 4 ExternalName      Service              Pod   ExternalName       Pod                     ExternalName Service                          kind  Service apiVersion  v1 metadata  name  service python spec  ports  port  3000 protocol  TCP targetPort  443 type  ExternalName externalName  remote server url com    serivce spec externalName                 Pod        Servi",
        "objectID": "posts/cloud_computing/k8s_learning/2-service",
        "date": "2021-06-06T14:03:01.000Z",
        "description": "",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 学习"
        ]
    },
    {
        "title": "K8s 学习 - 3 - DNS",
        "uri": "posts/cloud_computing/k8s_learning/3-dns",
        "content": "1 Pod   DNS 1 1 Pod   DNS        Pod    CoreDNS           pod      DNS        POD IP DNS   nslookup 192 168 166 168 tidb cluster dev pod cluster local Server  10 96 0 10 Address 1  10 96 0 10 kube dns kube system svc cluster local Name  192 168 166 168 tidb cluster dev pod cluster local Address 1  192 168 166 168 my tidb cluster dev tidb 0 my tidb cluster dev tidb peer tidb cluster dev svc cluster local    Deployment   DaemonSet       Pod CoreDNS          Pod        svc      DNS     1 2     hostname   subdomain       Pod      hostname      Pod                 Pod             hostname            spec hostname           hostname    spec subdomain               spec  hostname  webapp 1 subdomain  mysubdomain Pod       Kubernetes      DNS        svc           Headless Service      DNS            DNS             DNS       Pod      StatefulSet             Headless Service        StatefulSet     Pod    kubectl po my tidb cluster dev pd 0  o yaml     spec  hostname  my tidb cluster dev pd 0      pod   hostname subdomain  my tidb cluster dev pd peer     StatefulSet      Headless Service name 1 3     DNS       Pod      spec dnsPolicy         DNS             DNS     Default    Node    DNS ClusterFirst         domain        DNS           Node          ClusterFirstWithHostNet     Pod    hostNetwork    DNS      host None     Kubernetes DNS          spec dnsConfig           spec dnsConfig           DNS       spec  dnsPolicy   None  dnsConfig  nameservers  8 8 8 8 searches  ns1 svc cluster domain example my dns search suffix options  name  ndots value   2  name  edns0 Pod           etc resolv conf         nameserver 8 8 8 8 search ns1 svc cluster domain example my dns search suffix option natods 2 eth0 2 Service    DNS Service DNS       Service                      Service         DNS            svc  cluster_domain     cluster local       namespace        namespace    Service 3 Node    DNS         DNS         kube dns    Service                ClusterIP       DNS            DNS       Kubernetes     Node    DNS       DNS         Node               CoreDNS          Node    DNS     Pod    DNS               Node    DNS              DaemonSet       Pod     k8s gcr io k8s dns node cache       DNS                   Kubernetes       NodeLocal DNSCache 4 CoreDNS   1 11      Kubernetes     DNS     CoreDNS       Go                   DNS      4 1    CoreDNS CoreDNS                 CoreDNS               DNS                               loadbalance       DNS        loop     DNS           cache           health    Endpoint        kubernetes    Kubernetes     zone    etcd    etcd     zone               file    RFC11035        zone    hosts      etc hosts            zone               auto               reload         Corefile        forward            DNS      prometheus    Prometheus              URL pprof    URL     debug pprof        log    DNS          errors                  CoreDNS   Pod     coredns ConfigMap     CoreDNS                 ConfigMap    CoreDNS        k configmaps coredns  n kube system  o yaml     kind  ConfigMap data  Corefile      53   errors health   lameduck 5s   ready kubernetes cluster local in addr arpa ip6 arpa   pods insecure fallthrough in addr arpa ip6 arpa ttl 30   prometheus  9153 forward    etc resolv conf   max_concurrent 1000   cache 30 loop reload loadbalance       Kubernetes",
        "objectID": "posts/cloud_computing/k8s_learning/3-dns",
        "date": "2021-06-07T13:16:11.000Z",
        "description": "",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 学习"
        ]
    },
    {
        "title": "K8s 学习 - 4 - PV PVC StorageClass",
        "uri": "posts/cloud_computing/k8s_learning/4-pv-pvc-storageclass",
        "content": "1 PV  PV   Persistent Volume                           Local PV         PV                             1 1 PV     PV                apiVersion  v1 kind  PersistentVolume metadata  name  pv0003 spec  capacity  storage  5Gi volumeMode  Filesystem accessModes  ReadWriteOnce persistentVolumeReclaimPolicy  Recycle storageClassName  slow mountOptions  hard nfsvers 4 1 nfs  path   tmp server  172 17 0 2 capacity          volumeMode             Filesystem             Mount     Pod             device        Block        device       Pod accessModes             mount       accessMode                         ReadWriteOnce                    ReadOnlyMany                   ReadWriteMany                        PV      accessMode            AccessMode  storageClassName         StorageClass         StorageClass         class   PVC        PV  persistentVolumeReclaimPolicy  ReclaimPolicy          PVC           PV             Retain     PV PV     Released     Recycle       PV     Delete           AWS EBS GCE PD               NFS   HostPath     PV      Recycle           Delete  mountOptions    PV                          PV              Mount Points  nodeAffinity  PV                           PV       nodeAffinity     Local PV              1 2 PV      PV        5      Provisioning    PV            PV             StorageClass       Binding    PV     PVC  Using  Pod    PVC     Volume           StorageObjectInUseProtection           PVC  Releasing  Pod    Volume     PVC  Reclaiming     PV      PV                      Deleting     PV                  5        PV           Available PV           PVC     Bound PVC      PV  Released PVC          PV         Failed PV         2 PVC  PVC   Persistent Volume Claim       Pod   PV         namespace                        Pod                         PV        PVC                Pod               PV     PVC               PV            2 1 PVC    2 1 1 Spec PVC            PV                      PV  apiVersion  v1 kind  PersistentVolumeClaim metadata  name  myclaim spec  accessModes  ReadWriteOnce volumeMode  Filesystem volumeName  foo pv resources  requests  storage  8Gi storageClassName  slow         StorageClass selector  matchLabels  release   stable  matchExpressions   key  environment  operator  In  values   dev   accessModes         PV          volumeMode         PV          volumeName        PV name    Bind           PV name resources  Pod        selector           PV           PV        storageClassName        StorageClass      StorageClass   PV PVC              StorageClass         Default StorageClass                StorageClass   PV             storageClassName               Class       2 1 2 Status status  accessModes  ReadWriteOnce capacity  storage  446Gi phase  Bound accessModes       capacity         phase  PVC         Pending       PV  Bound        PV  Lost        PV    PV      2 2 PVC       Pod      Pod template      pvc    volume        PVC  apiVersion  v1 kind  Pod metadata  name  mypod spec  containers  name  myfrontend image  nginx volumeMounts       volume    mountPath    var www html  name  mypd volumes  name  mypd   volume     PVC persistentVolumeClaim  claimName  myclaim         PVC 3 StorageClass PV                   Static Provision                PV          Dynamic Provision     StorageClass   PVC        PV       StorageClass     PVC        PV            Driver     Provisioner       PV                       Provisioner     3 1 StorageClass    StorageClass             PV      apiVersion  storage k8s io v1 kind  StorageClass metadata  name  standard provisioner  kubernetes io aws ebs      Provisioner parameters  type  gp2 reclaimPolicy  Retain allowVolumeExpansion  true mountOptions  debug volumeBindingMode  Immediate provisioner     Provisioner               PV             Provisioner   provisioner              Provisioner  reclaimPolicy     PV                 PV           Delete  allowVolumeExpansion           PVC             PV                        allow volume expansion  mountOptions         PV   Mount Options  volumeBindingMode           PV mount       Immediate        PVC         PV  WaitForFirstConsumer   PV   PVC          Pod       PVC            PV          Local PV      Pod                  PV        WaitForFirstConsumer       allowedTopologies               PV                                Pod           PV      WaitForFirstConsumer        allowedTopologies               PV       Pod         PV  parameters      Provisioner    PV          512            256KiB     Provisioner          parameters  4 PV PVC StorageClass                PV PVC StorageClass             5 Local PV 5 1        LocalPV                        PV        Local PV    Pod     PV                    Local PV        PV     hostPath                                   Pod        PV       PV   spec nodeAffinity            PV  apiVersion  v1 kind  PersistentVolume metadata  name  example pv spec  capacity  storage  5Gi volumeMode  Filesystem accessModes  ReadWriteOnce persistentVolumeReclaimPolicy  Delete storageClassName  local storage      storageClassName local    local        Local PV path   mnt disks vo",
        "objectID": "posts/cloud_computing/k8s_learning/4-pv-pvc-storageclass",
        "date": "2021-06-08T07:43:09.000Z",
        "description": "PV PVC StorageClass 概念与使用",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 学习"
        ]
    },
    {
        "title": "K8s 学习 - 5 - RBAC 授权机制",
        "uri": "posts/cloud_computing/k8s_learning/5-rbac",
        "content": "1      API          Kubernetes               RBAC           RBAC             Role Base Access Control       RBAC                Role           Kubernetes API          Subject          User Group ServiceAccount   K8s      API Server    RoleBinding     Role   Subject                     Role      Subject      RoleBinding      Subject                RoleBinding     Role Subject             2 Role   ClusterRole 2 1 Role Role      Kubernetes            namespaced Resouce     Role                namespace            kind  Role apiVersion  rbac authorization k8s io v1 metadata  namespace  default name  pod reader rules  apiGroups       resources    pods   verbs    get    watch    list   metadata namespace     Role     namespace rules apiGroups         API Group         core API Group  rules resources         Resource     rules verbs               rules              mynamespace       Pod       GET Watch List                 get    list    watch    create    update    patch    delete   deletecollection    2 2 ClusterRole ClusterRole     non namespaced Resource         namespace               non namespaced Resource              kind  ClusterRole apiVersion  rbac authorization k8s io v1 metadata   namespace  omitted ClusterRoles not namespaced name  secret reader rules  apiGroups       resources    secrets   verbs    get    watch    list   rules apiGroups         API Group         core API Group  rules resources         Resource     rules verbs               rules              namespace       Secret       GET Watch List     2 2 1    ClusterRole    ClusterRole           ClusterRole      ClusterRole        apiVersion  rbac authorization k8s io v1 kind  ClusterRole metadata  name  monitoring aggregationRule  clusterRoleSelectors  matchLabels  rbac example com aggregate to monitoring   true  rules       rules          aggregationRule         ClusterRole         ClusterRole         rules             2 3             Kubernetes API            Pod          rules  apiGroups       resource    pods    pods log   verbs    get    list   2 4              rules resourceName                     rules  apiGroups       resource    configmap   resourceName    mu configmap   verbs    update    get                       list watch create   deletecollections     2 5    Role   ClusterRole     Kubernetes          Role   ClusterRole       system                ClusterRole   RoleBinding      label kubernetes io bootstrappiong rbac defaults              APIServer          Role              Role     Subject                                          Role   ClusterRole                       Role      Default roles role bindings  3 RoleBinding   ClusterRoleBinding 3 1 RoleBinding RoleBinding        Role     Subject    RoleBinding       Subject   namespace            role binding allows  jane  read pods  default  namespace  kind  RoleBinding apiVersion  rbac authorization k8s io v1 metadata  name  read pods namespace  default subjects  kind  User name  jane apiGroup  rbac authorization k8s io kind  ServiceAccount name  default roleRef  kind  Role name  pod reader apiGroup  rbac authorization k8s io      RoleBinding       ClusterRole          RoleBinding     namespace         3 2 ClusterRoleBinding ClusterRoleBinding   Subject                  3 2 1 ClusterRole      ClusterRole       aggregationRule      ClusterRole             ClusterRole      kind  ClusterRole apiVersion  rbac authorization k8s io v1 metadata  name  monitoring aggregationRule       label selector        clusterRoleSelectors  matchLabels  rbac example com aggregate to monitoring   true  rules       Rules        ClusterRole      kind  ClusterRole apiVersion  rbac authorization k8s io v1 metadata  name  monitoring endpoints labels  rbac example com aggregate to monitoring   true  rules will added  monitoring  role  rules  apiGroups       resources    services    endpoints    pods   verbs    get    list    watch              RBAC",
        "objectID": "posts/cloud_computing/k8s_learning/5-rbac",
        "date": "2021-06-08T12:05:39.000Z",
        "description": "",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 学习"
        ]
    },
    {
        "title": "K8s 学习 - 6 - StatefulSet",
        "uri": "posts/cloud_computing/k8s_learning/6-statefulset",
        "content": "1    Pod              Pod                                  Deployment   RelicSets                    Pod                                                                        1 1                                                          Pod                          Service                                        p2p                           Pod                         Pod             Pod                   1 1                PVC    Pod                Pod            PVC                       Pod   PVC             Pod   IP           Pod                                Pod                     Pod                   Pod     Pod                           Pod       Pod     0 N              Pod0       Pod0 PVC     Pod0 DNS           Pod0 Pod1            StatefulSet                        PVC             Headless Service              Pod                     2 StatefulSet    2 1    StatefuleSet         apiVersion  apps v1 kind  StatefulSet metadata  name  web spec  serviceName   nginx  replicas  2 selector  matchLabels  app  nginx template  metadata  labels  app  nginx spec  containers  name  nginx image  k8s gcr io nginx slim 0 8 ports  containerPort  80 name  web volumeMounts  name  www mountPath   usr share nginx html volumeClaimTemplates  metadata  name  www spec  accessModes    ReadWriteOnce   resources  requests  storage  1Gi storageClassName  shared ssd storage serviceName      Headless Service     replicas        selector  Pod selector         Pod  template  Pod template  volumeClaimTemplates      PVC     metadata name      PVC                spec        PVC   spec     2 2 Status StatefulSet              status     status  collisionCount  0 currentReplicas  3 currentRevision  my cluster 69545dcd7d observedGeneration  1 readyReplicas  3 replicas  3 updateRevision  my cluster 69545dcd7d updatedReplicas  3 currentReplicas        Pod     currentRevision           updatedReplicas        Pod     updateRevision                   Pod label   controller revision hash          Revision        Pod   StatefulSet      metadata  labels  controller revision hash  my cluster 69545dcd7d      Pod   controller revision hash label   StatefulSet     updateRevision         Pod             StatefulSet           Pod         2 3          PV    StorageClass                      PVC    StatefulSet                            Headless Service                      StatefulSet           Pod        spec replicas     0          Pod  2 4 Pod         spec podManagementPolicy         Pod      OrderedReady          Pod                Pod            Pod      Parallel     Pod                             2 5 Pod         spec updateStrategy      Pod               spec template                 spec  updateStrategy  rollingUpdate  partition  3 type  RollingUpdate type        updateStrategy     RollingUpdate                     OnDelete                       Pod              Pod           Pod  RollingUpdate           Pod        Pod         Pod       2 5 1 Partitions    spec updateStrategy rollingUpdate partition     Pod                   Pod             Pod                      partition   1   kubectl patch statefulset web  p    spec    updateStrategy    type   RollingUpdate   rollingUpdate    partition  3      statefulset  web  patched    StatefulSet   kubectl patch statefulset web   type  json   p     op   replace   path    spec template spec containers 0 image   value   gcr io google_containers nginx slim 0 7     statefulset  web  patched            web 1 web 2        web 0      kubectl pods  n mytest NAME READY STATUS RESTARTS AGE web 0 1 1 Running 0 3m2s web 1 1 1 Running 0 30s web 2 1 1 Running 0 50s    StatefulSet                       Pod                                 StatefulSet                                           Pod       StatefulSet         StatefulSet   Pod      StatefulSet           Kubernetes",
        "objectID": "posts/cloud_computing/k8s_learning/6-statefulset",
        "date": "2021-06-09T11:55:46.000Z",
        "description": "StatefulSet 概念与使用",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 学习"
        ]
    },
    {
        "title": "K8s 学习 - 7 - CRD",
        "uri": "posts/cloud_computing/k8s_learning/7-crd",
        "content": "1    Kubernetes                                         k8s                       CRD           Resource       Kubernetes          NetworkPolicy                  Kubernetes          Pod Service Volume                                             CustomResource          TiDB Operator       Operator      TiDB             PD TiDB TiKV                  Pod                        Pod   Service            TiDBCluster    CustomResource           TiDB           TiDBCluster               Kubernetes   TiDB Operator CRD Controller      TiDBCluster                        Kubernetes                                                           CustomResourceDefinition     Resource        k8s                    CRD  CustomResource Controller     CR       Pod          k8s API     CR         CustomResource             Pod Service                              3    CRD               CR           CR Controller             2 CRD CRD      CustomResource         k8s                  CRD             apiVersion  apiextensions k8s io v1beta1 kind  CustomResourceDefinition metadata  name  crontabs stable example com spec  group  stable example com versions  name  v1beta1 version enabled disabled Served flag  served  true One one version marked storage version  storage  true name  v1 served  true storage  false scope  Namespaced names  plural name used URL   apis    plural  crontabs singular  crontab kind  CronTab shortNames  ct additionalPrinterColumns  name  Spec type  string description  cron spec defining interval CronJob run jsonPath   spec cronSpec metadata name            spec group  API Group    REST API     apis        URL     versions         REST API     apis     scope        Namespaced    Cluster  names plural  CRD        singular  CRD        kind  CR        CR      shortNames           kubectl      additionalPrinterColumns  kubectl            CR   spec           2 1 URL    CRD        API Server        Endpoint URL        HTTP           CR    URL    apis   namespaces              API endpoint    apis stable example com v1 namespaces   crontabs   2 2 Validation spec validation         CR                          kube apiserver     feature gates CustomResourceValidation true                    apiVersion  apiextensions k8s io v1beta1 kind  CustomResourceDefinition metadata  name  crontabs stable example com spec  group  stable example com version  v1 scope  Namespaced names  plural  crontabs singular  crontab kind  CronTab shortNames  ct validation  openAPIV3Schema schema validating custom objects  openAPIV3Schema  properties  spec  properties  cronSpec  type  string pattern      d       d     s   d       d     4    replicas  type  integer minimum  1 maximum  10 spec cronSpec                spec replicas      1   10         openAPIV3Schema       OpenAPI v3 schemas  2 3 Defaulting   Nullable   OpenAPI v3 validation schema                   apiVersion     apiextensions k8s io v1       spec cronSpec            spec image     null    apiVersion  apiextensions k8s io v1 kind  CustomResourceDefinition metadata  name  crontabs stable example com spec  group  stable example com versions  name  v1 served  true storage  true schema  openAPIV3Schema schema validating custom objects  openAPIV3Schema  type  object properties  spec  type  object properties  cronSpec  type  string pattern      d       d     s   d       d     4    default   5 0        image  type  string nullable  true replicas  type  integer minimum  1 maximum  10 default  1 scope  Namespaced names  plural  crontabs singular  crontab kind  CronTab shortNames  ct 2 4 Subresources subresouces      status   scale     status  API URL     status                   status scale  API URL     scale       Kubernetes       HPA      CRD         kubectl scale      CRD                    scale        CustomResource                            spec  group  stable example com versions  name  v1 subresources  status     scale  specReplicasPath   spec replicas statusReplicasPath   status replicas labelSelectorPath   status labelSelector scale specReplicasPath    CR              statusReplicasPath    CR              labelSelectorPath    CR    Label Selector      2 5 Categories spec names categories              kubectl          apiVersion  apiextensions k8s io v1 kind  CustomResourceDefinition metadata  name  crontabs stable example com spec    names  categories                 categories        CR      all         kubectl                      2 6 Finalizer Finalizer      CR              CR        apiVersion   stable example com v1  kind  CronTab metadata  finalizers  stable example com finalizer finalizers     Finalizer            Controller                 Kubernetes     metadata deletionTimestamp                                   finalizers            Controller    metadata deletionTimestamp                                           finalizers                Controler      metadata deletionGracePeriodSeconds                              finalizers     Kubernetes               3 CR     CRD           CR         CR    spec       k8s            Controller                     CronTab     apiVersion   stable example ",
        "objectID": "posts/cloud_computing/k8s_learning/7-crd",
        "date": "2021-06-10T11:45:54.000Z",
        "description": "CRD 概念与使用",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 学习"
        ]
    },
    {
        "title": "K8s 学习 - 8 - API",
        "uri": "posts/cloud_computing/k8s_learning/8-api",
        "content": "1    1 1         Kubernetes                Group Version Resource       Group      API           Version        API         Resource               API                 etcd            etcd                         alias edctl  etcdctl   cacert  etc kubernetes pki etcd ca crt   cert  etc kubernetes pki etcd peer crt   key  etc kubernetes pki etcd peer key   edctl  registry   prefix   keys only  registry pingcap com tidbinitializers mycluster mycluster init  registry pingcap com tidbmonitors mycluster mycluster  registry pods kube system coredns 7c7788d75c cggn5                         yaml      apiVersion  batch v2alpha1   Group Version kind  CronJob   Resource     Kubernetes        Group Version Resource          name          1 2 REST    Kubernetes          API          HTTP REST        POST PUT GET DELETE   HTTP method                  Kubernetes    OpenAPI                  https     openapi v2     API        TOEKN   TOKEN   kubectl describe secrets   kubectl secrets  n kube system  grep admin  cut  f1  d       n kube system  grep  E   token   cut  f2  d    tr  d   t  tr  d         APIServer      APISERVER   kubectl config view  grep server cut  f 2   d       tr  d        curl  H  Authorization  Bearer  TOKEN   APISERVER openapi v2  k   jq      swagger    2 0    info      title    Kubernetes    version    v1 21 1      paths         2      Kubernetes            URL      API     URL     apis   namespaces                      URL               v1            Alpha       version   alpha       v1alpha1                  Bug                      API                                   Beta       version   beta       v2beta3                           API                     GA       verison            v1  3 API Groups         API Kubernetes   API              API Groups          API Groups  Core Groups          Legacy Groups                   Container Pod Service      URL        api v1   Group         spec apiVersion   v1     API Groups URL        apis      spec apiVersion              apps v1                      Deployments RollingUpdates ReplicaSet  extensions      API      DaemonSet ReplicaSet Ingresses  batch                  Job  autoscaling  HPA         certificate k8s io                 rbac authorization k8s io v1  RBAC           policy   Pod              CRD       Kubernetes       API Group     API       3 1       API Group    API Group                API Server              API         runtime config batch v1 false      batch v1      API  4    Kubernetes API                       REST      HTTP API           API          non namespace      apis             apis             namespace        apis   namespaces         namespace           apis   namespaces        namespace     name       4 1 watch       etcd        Kubernetes        resourceVersion           etcd              client   watch                   resourceVersion                   api v1 namespaces test pods watch 1 resourceVersion 10245 200 OK Transfer Encoding  chunked Content Type  application json    type    ADDED    object     kind    Pod    apiVersion    v1    metadata     resourceVersion    10596                   type    MODIFIED    object     kind    Pod    apiVersion    v1    metadata     resourceVersion    11020                       etcd                     5min                     HTTP Code 410 Gone     client        410                list         watch                            Go   Reflector                                  event     bookmark event      4 2                      HTTP URL                                                      1 9    Kubernetes                         limit   continue        500   Pod     limit 500    api v1 pods limit 500     200 OK Content Type  application json    kind    PodList    apiVersion    v1    metadata      resourceVersion   10245    continue    ENCODEDCONTINUETOKEN           items            returns pods 1 500                Pod     continue ENCODEDCONTINUETOKEN              api v1 pods limit 500 continue ENCODEDCONTINUETOKEN     200 OK Content Type  application json    kind    PodList    apiVersion    v1    metadata      resourceVersion   10245    continue          continue token empty reached end list         items            returns pods 1001 1253           continue                 resourceVersion      4 3           Kubernetes      JSON                      client    protobuf                      Accept  application vnd kubernetes protobuf        protobuf                  Content Type  application vnd kubernetes protobuf          protobuf             CRD    API            Protobuf      Accept                Accept  application vnd kubernetes protobuf  application json 4 4                     finalization        metadata deletionTimestamp              Finalizers  delete        Finalizers            etcd         5      Kubernetes   API                   Authentication        Authorization          Admission Control                                5 1 Authentication Authentication                                APIServer                        x509          HTTP            bearer token          token          ",
        "objectID": "posts/cloud_computing/k8s_learning/8-api",
        "date": "2021-06-12T07:32:36.000Z",
        "description": "API 版本管理规则与扩展方式",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 学习"
        ]
    },
    {
        "title": "K8s 学习 - 9 - Schedule Preemption Eviction",
        "uri": "posts/cloud_computing/k8s_learning/9-schedule-preemption-eviction",
        "content": "1                               Pod          Scheduler      2 Schedule 2 1 nodeSelector Pod   spec nodeSelector        Pod                   kv          label         kv        Pod  apiVersion  v1 kind  Pod metadata  name  nginx labels  env  test spec  containers  name  nginx image  nginx imagePullPolicy  IfNotPresent nodeSelector  disktype  ssd      label    disktype ssd                     label                label  kubernetes io hostname failure domain beta kubernetes io zone failure domain beta kubernetes io region topology kubernetes io zone topology kubernetes io region beta kubernetes io instance type node kubernetes io instance type kubernetes io os kubernetes io arch 2 2 nodeName spec nodeName                Pod               apiVersion  v1 kind  Pod metadata  name  nginx spec  containers  name  nginx image  nginx nodeName  kube 01           kube 01 2 3 affinity 2 3 1 nodeAffinity spec affinity nodeAffinity   nodeSelector            label     Pod                          requiredDuringSchedulingIgnoredDuringExecution                    nodeSelector            preferredDuringSchedulingIgnoredDuringExecution                                                                       Pod       apiVersion  v1 kind  Pod metadata  name  with node affinity spec  affinity  nodeAffinity  requiredDuringSchedulingIgnoredDuringExecution           nodeSelectorTerms  matchExpressions  key  kubernetes io e2e az name operator  values  e2e az1 e2e az2 preferredDuringSchedulingIgnoredDuringExecution          weight  1 preference  matchExpressions  key  another node label key operator  values  another node label value containers  name  with node affinity image  k8s gcr io pause 2 0 nodeSelectorTerms                                   matchExpressions                                weight      1 100                          weight     2 3 2 Pod          spec affinity podAffinity                 Pod   label              Pod             requiredDuringSchedulingIgnoredDuringExecution          preferredDuringSchedulingIgnoredDuringExecution        spec affinity podAntiAffinity            Pod       Pod          Pod                            topologyKey          label                         topologyKey  topology kubernetes io zone               topology kubernetes io zone    label                                                            Pod                                                             Pod                apiVersion  apps v1 kind  Deployment metadata  name  web server spec  selector  matchLabels  app  web store replicas  3 template  metadata  labels  app  web store spec  affinity  podAntiAffinity  requiredDuringSchedulingIgnoredDuringExecution  labelSelector  matchExpressions  key  app operator  values  web store topologyKey   kubernetes io hostname           podAffinity  requiredDuringSchedulingIgnoredDuringExecution  labelSelector  matchExpressions  key  app operator  values  store topologyKey   kubernetes io hostname  containers  name  web app image  nginx 1 16 alpine       podAntiAffinity                 app web store   Pod      podAffinity             app store   Pod             Pod                       app store   Pod     2 4 taint   tolerations   affinity    taint            Pod       taint               Pod      Pod   toleration            taint   2 4 1 taint    kubectl taint         taint    kubectl taint nodes node1 key1 value1 NoSchedule   node1    key1 value1   traint              NoSchedule                  taint  kubectl taint nodes node1 key1 value1 NoSchedule                 taint      kv        toleration      taint            effect   NoSchedule     Pod                   Pod  PreferNoSchedule       Pod                NoExecute     Pod                           Pod  Kubernetes                         node kubernetes io not ready   NoExecute         Ready   false  node kubernetes io unreachable   NoExecute        Ready   unknown  node kubernetes io memory pressure              node kubernetes io disk pressure   NoSchedule            node kubernetes io pid pressure   NoSchedule     PID     node kubernetes io network unavailable   NoSchedule           node kubernetes io unschedulable   NoSchedule          node cloudprovider kubernetes io uninitialized   NoSchedule                   DaemonSet     Pod           NoExecute   taint     Pod             2 4 2 tolerations   Pod     spec tolerations              taint          taint                     operator   Exist       key       operator   Equal    key val      effect    apiVersion  v1 kind  Pod metadata  name  nginx labels  env  test spec  containers  name  nginx image  nginx imagePullPolicy  IfNotPresent tolerations  key   example key  operator   Exists  effect   NoSchedule       key    example key  effect    NoSchedule    taint     spec tolerations tolerationSeconds                          tolerations  key   key1  operator   Equal  value   value1  effect   NoExecute  tolerationSeconds  3600       taint   3600        3 Eviction 3 1        kubelet     CPU Mem           inode                      kubelet                Pod            kubelet    Pod     Failed        P",
        "objectID": "posts/cloud_computing/k8s_learning/9-schedule-preemption-eviction",
        "date": "2021-06-23T12:09:25.000Z",
        "description": "Pod 调度，抢占与驱逐",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 学习"
        ]
    },
    {
        "title": "源码阅读 - Volume 实现",
        "uri": "posts/cloud_computing/k8s_learning/volume-implementation",
        "content": "1             Volume                 Deploy PVC      Deploy PVC     Provision Volume   PV Controller    StorageClass      Volume        PV           PV     Bind PV   PV Controller   PV   PVC     Attach Volume   AttachDetach Controller Attach Volume   Node   Node            Mount Device   Kubelet      Mount           Setup Volume   Kubelet    Pod                                            Volume                           Volume    hostpath secret configmap          SetUp                               TearDown Volume   Kubelet     Pod        Unmount Device   Unmount       Detach Volume     Node   Detach Volume  Delete             Volume                                  2 Volume Plugin         Controller    Kubelet        Volume    Create Delete Attach Detach             VolumePlugin    VolumePlugin                          Kubernetes        Volume Plugin            Volume      ConfigMap HostPath          Volume           Controller Manager     CSI   Container Storage Interface   Controller Mananger         Volume Plugin    Plugin        CSI Plugin  FlexVolume                    2 1                                  Pod       Volume    Pod   Volume           VolumePlugin                                 Mounter CanMount     SetUp                           SetUp     SetUpAt       Pod        Volume    Unmounter TearDown     TearDownAt         Pod     Volume    CustomBlockVolumeMapper SetUpDevice       Pod     Device MapPodDevice       Device     Pod CustomBlockVolumeUnmapper TearDownDevice         Pod      Device UnmapPodDevice        Device    Provisioner Provision          Volume Deleter Delete          Volume Attacher Attach     Attach Volume   Node   VolumesAreAttached        Node    attached Volume Detacher Detach     Detach Volume DeviceMounter MountDevice       attached Volume           DeviceUnmounter UnmountDevice        attached Volume            Volume represents directory used pods hosts node  method    implementations methods volume interface idempotent  type Volume interface      GetPath    volume         GetPath   string    MetricsProvider        MetricsProvider      BlockVolume interface provides methods generate global map path    pod device map path  type BlockVolume interface      GetGlobalMapPath returns global map path contains    bind mount associated block device     ex  plugins kubernetes io  PluginName   DefaultKubeletVolumeDevicesDirName   volumePluginDependentPath   pod uuid  GetGlobalMapPath spec  Spec   string  error     GetPodDeviceMapPath returns pod device map path    name symbolic link associated block device     ex  pods  podUid   DefaultKubeletVolumeDevicesDirName   escapeQualifiedPluginName     volumeName  GetPodDeviceMapPath    string  string  SupportsMetrics   bool MetricsProvider      Mounter     Pod    Volume       type Mounter interface   Volume    CanMount     Setup                   Mount     CanMount   error    SetUp   Pod    Volume               SetUp mounterArgs MounterArgs  error    SetUpAt   Pod    Volume           dir    SetUpAt dir string  mounterArgs MounterArgs  error    GetAttributes    Volume     GetAttributes   Attributes      Unmounter interface provides methods cleanup unmount volumes  type Unmounter interface   Volume    TearDown     Pod       TearDown   error    TearDown     Pod         TearDownAt dir string  error      BlockVolumeMapper interface mapper interface block volume  type BlockVolumeMapper interface   BlockVolume      CustomBlockVolumeMapper interface provides custom methods set up map volume  type CustomBlockVolumeMapper interface   BlockVolumeMapper    SetUpDevice     Pod        SetUpDevice    stagingPath string  err error     MapPodDevice maps block device path return path  MapPodDevice    publishPath string  err error     GetStagingPath returns path used staging volume    mainly used CSI plugins GetStagingPath   string      BlockVolumeUnmapper interface unmapper interface block volume  type BlockVolumeUnmapper interface   BlockVolume      CustomBlockVolumeUnmapper interface provides custom methods cleanup unmap volumes  type CustomBlockVolumeUnmapper interface   BlockVolumeUnmapper    TearDownDevice     Pod        TearDownDevice mapPath string  devicePath string  error    UnmapPodDevice removes traces MapPodDevice procedure  UnmapPodDevice   error   type Provisioner interface      Provision      Volume Provision selectedNode v1 Node  allowedTopologies   v1 TopologySelectorTerm   v1 PersistentVolume  error    type Deleter interface   Volume    Deleter      Volume Delete   error   type Attacher interface   DeviceMounter    Attach Volume      Node   Attach spec  Spec  nodeName types NodeName   string  error     VolumesAreAttached    Node    attached Volume VolumesAreAttached specs   Spec  nodeName types NodeName   map Spec bool  error     WaitForAttach    attach    WaitForAttach spec Spec  devicePath string  pod v1 Pod  timeout time Duration   string  error    type DeviceMounter interface      GetDeviceMountPath    Node   Volume          GetDeviceMountPath spec  Spec   string  error     MountDevice   Volume                       Pod  MountDevice spec  Spec  devi",
        "objectID": "posts/cloud_computing/k8s_learning/volume-implementation",
        "date": "2021-11-11T14:35:42.000Z",
        "description": "Kubernetes Volume 的背后原理",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "lightgallery": true,
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 学习"
        ]
    },
    {
        "title": "K8s 实践 - Network Across Cluster",
        "uri": "posts/cloud_computing/k8s_practice/across-kubernetes",
        "content": "Kubernetes                     1         TiDB   Multi Kubernetes        TiDB                          Multi Kubernetes           Kubernetes   IP                     Domain                Multi Kubernetes                                             DNS              Domain                  DNS              Pod IP  2        Multi Kubernetes                          EKS      VPC    EKS      VPC Peering                   GKE   GKE                      Multi Kubernetes         Tunnel                 submariner io submariner                    Kubernetes     Pod               Kubernetes     Pod                        Kubernetes                     Kubernetes                     Kubernetes                   NodePort                                                             Cluster1       Node1    Node2    Cluster2         NodePort           3 DNS 3 1 DNS          Pod DNS    Service DNS       CoreDNS         Cluster        Cluster               Cluster1 Pod    Cluster1 CoreDNS Cluster1 Pod    DNS     Cluster1 CoreDNS  Cluster1 CoreDNS    Cluster2 CoreDNS Cluster1 CoreDNS       Domain   Cluster2         Cluster2 CoreDNS                            Cluster2 CoreDNS    Cluster1 CoreDNS Cluster2 CoreDNS           Domain      Cluster2 Pod IP   Cluster1 CoreDNS                         Cluster1 CoreDNS    Cluster1 Pod Cluster1 CoreDNS          Cluster1 Pod  Cluster1 Pod    Cluster2 Pod                                   CoreDNS        Cluster                                                              Kubernetes    Service                  Service IP   Pod                Cluster1 Pod            Cluster2                AWS GCP   Route   Service IP   Pod          Cluster1 Pod             Cluster2     Cluster2    kube proxy    Service IP                             Cluster2           3 2    CoreDNS                           Domain   Cluster2         CoreDNS               CoreDNS              Customizing DNS Service        CoreDNS    K8s      2   Service      Kubernetes    Domain    Pod   Service  Pod Domain   pod    svc     svc  Service Domain   svc     DNS      Domain                         Multi Kubernetes   Cluster Domain             CoreDNS     apiVersion  v1 kind  ConfigMap metadata  name  coredns namespace  kube system data  Corefile      53   default      53                                         CoreDNS     Kubernetes     Cluster Domain       Cluster      kubelet     cluster domain            Cluster Domain         Cluster              Cluster                 Multi Kubernetes Cluster Domain     cluster local                                 Pod        Cluster   Pod  apiVersion  v1 kind  ConfigMap metadata  name  coredns namespace  kube system data  Corefile      53   default      svc cluster local 53                                Multi Cluster     namespace        4 AWS      4 1    EKS          EKS             VPC CIDR          eksctl create cluster   name test cluster   with oidc   ssh access   managed   region us west 2   instance types m5 xlarge   nodes 3   eksctl create cluster   name test cluster 2   with oidc   ssh access   managed   region us west 2   instance types m5 xlarge   nodes 3   vpc cidr 10 0 0 0 16       EKS                eksctl cluster test cluster NAME VERSION STATUS CREATED VPC SUBNETS SECURITYGROUPS test cluster 1 20 ACTIVE 2021 09 30T11 53 19Z vpc 0409bd99d5e2b6f5b subnet 00d1a0abdaf60021b subnet 0a9fca73d25257d90 subnet 0aee90db41909f538 subnet 0c81d647b53fe567a subnet 0dcd3f3da03b5e767 subnet 0f80939acbdda6357 sg 00985dc11204cfeda   eksctl cluster test cluster 2 NAME VERSION STATUS CREATED VPC SUBNETS SECURITYGROUPS test cluster 2 1 20 ACTIVE 2021 09 30T12 19 39Z vpc 0e35ec388cb70e7fc subnet 012fa5481e326aafc subnet 0586d236d85ed6893 subnet 0d5695aa8970fea2d subnet 0d61b543c82d94d14 subnet 0d740e2366cf2778f subnet 0def1a48342d72d32 sg 0d914515ffd1173b5        Region     VPC    EKS       Region                         1 2             k1   k2           kubectl         kubeconfig      4 2      EKS   Pod   Host Network   Node         AWS VPC     Subnet                  VPC                    AWS     VPC Peering      VPC       Route Table                  VPC ACL        Subnet      ACL Security Group          Instance      Security Group          VPC Peering    VPC                   4 2 1    VPC Peering Create VPC Peering    VPC1    VPC2    aws ec2 create vpc peering connection     vpc id vpc 0409bd99d5e2b6f5b     peer vpc id vpc 0e35ec388cb70e7fc    VpcPeeringConnection      AccepterVpcInfo      OwnerId    385595570414    VpcId    vpc 0e35ec388cb70e7fc    Region    us west 2      ExpirationTime    2021 10 07T12 53 36 00 00    RequesterVpcInfo      CidrBlock    192 168 0 0 16    CidrBlockSet        CidrBlock    192 168 0 0 16        OwnerId    385595570414    PeeringOptions      AllowDnsResolutionFromRemoteVpc   false   AllowEgressFromLocalClassicLinkToRemoteVpc   false   AllowEgressFromLocalVpcToRemoteClassicLink   false     VpcId    vpc 0409bd99d5e2b6f5b    Region    us west 2      Status      Code    pending acceptance    Message    Pending Acceptance 385595570414      Tags        VpcPeeringConnectionId    pcx",
        "objectID": "posts/cloud_computing/k8s_practice/across-kubernetes",
        "date": "2021-09-30T07:25:32.000Z",
        "description": "跨 Kubernetes 集群网络连通",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "lightgallery": true,
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 实践"
        ]
    },
    {
        "title": "K8s 实践 - 集群搭建",
        "uri": "posts/cloud_computing/k8s_practice/create-cluster",
        "content": "Kubernetes                     1               3           Master Node    Work Node                                         centos 7    2 GB                 copy            Node 1 Node 2 Node 3                              VirtualBox     Nat         Node     IP 10 0 2 10   10 0 2 12             ssh   DNAT                        NodeNatNetwork                       hostname       IP                                          VirtualBox   Nat         2    K8s       kubeadm      k8s   Node 1   Master             2 1    kubeadm kubelet kubectl    kubeadm kubelet kubectl               Installing kubeadm   2 2 kubeadm init     Master    Node 1      kubeadm init      Master             kubeadm     Kubernetes                         etc kubernetes                 static pod        apiserver controller manager etcd scheduler              kubeadm         bootstrap token                   token               kubeadm    swap     kubeadm       swap    swapoff  a             kubectl      8080               kubectl        kubeadm      etc kubernetes admin conf               admin conf        kube config                 2 3 kubeadm join  token            kubead init                kubeadm join   Node 1 Node 2                 root Node 2 kubeadm join 10 0 2 10 6443   token mahrou d3uodof21i3d6yxk   discovery token ca cert hash sha256 21dfe4ef6b3bbd89f803bf44ff6eda587874336d103d0e4a3b   v 5      kubelet        pod           kube proxy                     Node 1    nc ip         ping       Node 1 tcpdump         Node 3                   iptables   Node 2 Node 3 IP     kubectl                 2 4                         kubectl nodes            NotReady       kubectl describe node node 1                   Network Plugin       3                         Ready         Pod           Weave              kubectl apply  f  https   cloud weave works k8s net k8s version   kubectl version   base64   tr  d   n               Weave     BAAC                 Pod     DaemonSet                     DaemonSet              Node    Pod                 weave net     pod               4                                                 Rook                kubectl apply  f https   raw githubusercontent com rook rook master cluster exampleskubernetes ceph common yaml   kubectl apply  f https   raw githubusercontent com rook rook master cluster exampleskubernetes ceph operator yaml   kubectl apply  f https   raw githubusercontent com rook rook master cluster examples kubernetes ceph cluster yaml            rook       namespace         DaemonSet            Pod",
        "objectID": "posts/cloud_computing/k8s_practice/create-cluster",
        "date": "2020-10-15T12:10:35.000Z",
        "description": "使用虚拟机搭建 Kubernetes 集群",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 实践"
        ]
    },
    {
        "title": "K8s 编程 - 1 - 基本概念",
        "uri": "posts/cloud_computing/k8s_programming/1-basic",
        "content": "Kubernetes               Controller                 Programming Kubernetes           1 Controller    1 1 Control Loop    Controller                   Control Loop                      Watch                                                   Pod             APIServer                         1 2                   RPC           Kubernetes       APIServer   Watch                   Deployment     Pod     Deployment Controller Watch   Deployment                    Deployment                ReplicaSet     ReplicaSet Controller Watch   ReplicaSet                   ReplicaSet                Pod     Scheduler      Controller    Watch             Pod    Pod   spec nodeName                   Scheduler   Pod          Node   Node     Pod   spec nodeName           APIServer  kubectl Watch   Pod            Pod   spec nodeName       Node                Pod           Controller          Control Loop                     Controller  1 3           Controller                                    Kubernetes APIServer            Optimistic Concurrency                   APIServer                                      Client          var err error retries    0  retries    2 1 HTTP API         APIServer       RESTful HTTP API      JSON Protobuf                                 Protobuf                  JSON             REST    HTTP          HTTP Verb    Method             HTTP                 HTTP POST         HTTP PUT                      HTTP PATCH                          HTTP DELETE                 API           HTTP API                2 2 API      2 2 1 Kind Kind                    Kind    JSON    kind Golang    Kind   kind  Pod             kind           Pod           PodLists NodeLists                    scale Status  2 2 2 API Group Group     Kind               Job    ScheduledJob       batch     API Group  2 2 3 Version    API Group        Version           v1beta1                        APIServer                                APIServer     Storage Version                      2 2 4 Resource   HTTP API Endpoint                     pods   HTTP    Endpoint      Resource     Resource       Endpoint               pod nginx port forward    pod nginx logs      Endpoint      SubResource                 CRD     subresouces          spec  group  stable example com versions  name  v1 subresources  status     scale  specReplicasPath   spec replicas      Kind   Resource                 Resource       HTTP API Path  Kind                    etcd           Kind   Resource               OperatorHub API       Programming Kubernetes",
        "objectID": "posts/cloud_computing/k8s_programming/1-basic",
        "date": "2021-08-06T05:59:17.000Z",
        "description": "K8s 编程需要知晓的一些基本概念",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "lightgallery": true,
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 编程"
        ]
    },
    {
        "title": "K8s 编程 - 2 - 编程基础",
        "uri": "posts/cloud_computing/k8s_programming/2-client-go",
        "content": "Kubernetes               Controller                 Programming Kubernetes           1       1 1 k8s io client go    Operator             k8s io client go        Kubernetes      client     client go   Kubernetes         Kubernetes 1 x y           client go       client go               client go 9 0 0  1 2 k8s io api k8s io api        Kubernetes              GroupVersion          Pod               core Group        k8s io api core v1     types go                    1 3 k8s io apimachinery k8s io apimachinery     Kubernetes API             apimachinery           API       ObjectMeta TypeMeta GetOptions          API Machinery              API                      2    client go 2 1                 Go       client go               import   metav1  k8s io apimachinery pkg apis meta v1   k8s io client go tools clientcmd   k8s io client go kubernetes          config kubeconfig   flag String  kubeconfig       kube config    kubeconfig file   flag Parse   config  err    clientcmd BuildConfigFromFlags      kubeconfig        client set clientset  err    kubernetes NewForConfig config        client set      pod  err    clientset CoreV1   Pods  book   Get  example   metav1 GetOptions                  CR      ClientSet         ClientSet       Group    Version   Client        Pod             ServiceAccount        var run secrets kubernetes io serviceaccount              Token      kubeconfig       ClientSet      Kubernetes        ServiceAccount       config config  err    rest InClusterConfig   err    nil           kubeconfig      config kubeconfig    filepath Join        kube    config   envvar    os Getenv  KUBECONFIG    len envvar   0   kubeconfig   envvar   config  err   clientcmd BuildConfigFromFlags     kubeconfig  err    nil   fmt Printf  The kubeconfig cannot loaded   v n   err os Exit 1            client set clientset  err    kubernetes NewForConfig config        Client   JSON     APIServer                  Protobuf     cfg  err    clientcmd BuildConfigFromFlags      kubeconfig  cfg AcceptContentTypes    application vnd kubernetes protobuf application json             cfg ContentType    application vnd kubernetes protobuf             clientset  err    kubernetes NewForConfig cfg  2 2             ClientSet               api        APIServer                       client go    Kubernetes APIServer                              client go     README                         client go   Kubernetes           API            client go          API    Kubernetes                               Kubernetes       client go                                 client go    Kubernetes                        2 3 API         Kubernetes     API           Alpha   v1alpha1 v1aplpha2     Alpha                                                         Beta   v1beta1 v1beta2 v2beta1     Beta                                     Beta             GA   v1 v2                                                                                     APIServer   APIServer                               v1beta1     API             v1     API         3 Kubernetes    3 1 Object Go      Kubernetes        runtime Object interface       k8s io apimachinery pkg runtime       Object interface supported API types registered Scheme  objects scheme    expected serialized wire  interface Object provide Scheme allows    serializers set kind  version  group object represented as  Object may choose    return no op ObjectKindAccessor cases not expected serialized  type Object interface   GetObjectKind   schema ObjectKind DeepCopyObject   Object   GetObjectKind        ObjectKind         GVK DeepCopyObject             Object schema ObjectKind          Kind   Object     objects serialized Scheme encode type information  interface used    serialization set type information Scheme onto serialized version object     objects cannot serialized unique requirements  interface may no op  type ObjectKind interface      SetGroupVersionKind sets clears intended serialized kind object  Passing kind nil    clear current setting  SetGroupVersionKind kind GroupVersionKind     GroupVersionKind returns stored group  version  kind object  empty struct    object does not expose provide fields  GroupVersionKind   GroupVersionKind   SetGroupVersionKind        Object   GVK GroupVersionKind        Object   GVK      Object           Kind            3 2 TypeMeta Object       interface       Kubernetes          metav1 TypeMeta       GroupVersionKind         TypeMeta describes individual object API response request    strings representing type object its API schema version     Structures versioned persisted inline TypeMeta         k8s deepcopy gen false type TypeMeta struct      Kind string value representing REST resource object represents     Servers may infer endpoint client submits requests to     Cannot updated     CamelCase     info  https   git k8s io community contributors devel sig architecture api conventions md types kinds     optional Kind string json  kind omitempty  protobuf  bytes 1 opt name kind     APIVersion defines versioned schema representation object     Servers convert recognized schemas latest inter",
        "objectID": "posts/cloud_computing/k8s_programming/2-client-go",
        "date": "2021-08-10T11:15:27.000Z",
        "description": "",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "lightgallery": true,
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 编程"
        ]
    },
    {
        "title": "K8s 编程 - 3 - Custom Resource",
        "uri": "posts/cloud_computing/k8s_programming/3-custom-resource",
        "content": "Kubernetes               Controller                 Programming Kubernetes           1           1 7      Kubernetes     CR     CR         Kubernetes          etcd      APISever      HTTP API           APIServer    apiextensions apiserver    CR     HTTP              CR   CustomResourceDefinition    CRD             Kubernetes                   CR  apiVersion  apiextensions k8s io v1beta1 kind  CustomResourceDefinition metadata  name  ats cnat programming kubernetes info spec  group  cnat programming kubernetes info names  kind  listKind  AtList plural  ats singular  scope  Namespaced subresources  status     version  v1alpha1 versions  name  v1alpha1 served  true storage  true    CR   CRD        K8s      CRD  2            CRD   kubectl          CR            kubectl          CR             kubectl                     kubectl tidbcluster  v 7 kubectl      APIServer    apis       API Group    curl  H  Authorization  Bearer  TOKEN    insecure  APISERVER apis    kind    APIGroupList    apiVersion    v1    groups        name    apiregistration k8s io    versions        groupVersion    apiregistration k8s io v1    version    v1        groupVersion    apiregistration k8s io v1beta1    version    v1beta1        preferredVersion      groupVersion    apiregistration k8s io v1    version    v1                    API Group       apis group version     GroupVersion        Resource           Resource    curl   insecure  H  Authorization  Bearer  TOKEN   APISERVER apis pingcap com v1alpha1    kind    APIResourceList    apiVersion    v1    groupVersion    pingcap com v1alpha1    resources        name    tidbclusters    singularName    tidbcluster    namespaced   true   kind    TidbCluster    verbs      delete    deletecollection    get    list    patch    create    update    watch      shortNames      tc      storageVersionHash    2dlERqlmc8s             kubectl                Group   pingcap com  Version   v1alpha1  Resource   tidbclusters                      RESTMapper           kubectl         kube cache          Resource          10min       CRD           10min     CLI             3 CustomResourceDefinition 3 1      3 2      3 2 1 CRD             CR      APIServer               CRD      validation        OpenAPI v3 Schema          CRD                                    Admission Webhook    Webhook      OpenAPI                       1 14    OpenAPI v3 Schema               Schema             1 15    CRD Schema     Kubernetes APIServer   OpenAPI           kubectl                                       foo bar       OpenAPI Schema        foo       kubectl                Schema                       CRD    OpenAPI Schema          3 2 2 ShortName   Category CRD       ShortName                    kubectl api resource                kubectl api resource NAME SHORTNAMES APIVERSION NAMESPACED KIND bindings v1 true Binding componentstatuses cs v1 false ComponentStatus configmaps cm v1 true ConfigMap endpoints ep v1 true Endpoints events ev v1 true Event limitranges limits v1 true LimitRange namespaces ns v1 false Namespace CRD        categories              kubectl                   apiVersion  apiextensions k8s io v1beta1 kind  CustomResourceDefinition metadata  name  ats cnat programming kubernetes info spec      categories  3 2 3     3 2 4 SubResource SubResource        HTTP Endpoint        HTTP API Path                logs  portforward  exex       CRD      SubResource  scale    status   1  Status  status       CR     spec   status                     status     Controller       spec     RBAC                     status SubResource             status SubResource   status             status API   RBAC        HTTP endpoint           RBAC   status SubResource     spec   status          apiVersion  rbac authorization k8s io v1 kind  Role metadata       rules  apiGroups       resources    ats status   verbs    update    patch        status Resource                 HTTP Endpoint                 status             status HTTP Endpoint           status           metadata   status                  metadata generation           spec                   CRD    status SubResource  apiVersion  apiextensions k8s io v1beta1 kind  CustomResourceDefinition spec  subresources  status                  status          status     HTTP API                   status SubResource      CRD          Controller        HTTP Endpoint     status                         CRD         apiVersion  apiextensions k8s io v1beta1 kind  CustomResourceDefinition spec      versions  name  v1alpha1 served  true storage  true name  v1beta1 served  true subresources  status           2  Scale scale                                   Deployment   ReplicaSet                            kubectl scale       scale            kubectl scale   replicas 3 your custom resource  v 7 I0429 21 17 53 138353 66743 round_trippers go 383  PUT https   host apis group v1 your custom resource scale apiVersion  apiextensions k8s io v1beta1 kind  CustomResourceDefinition spec  subresources  scale  specReplicasPath   spec replicas statusReplicasPath   status replicas labelSelectorPath   status labelSelector         sca",
        "objectID": "posts/cloud_computing/k8s_programming/3-custom-resource",
        "date": "2021-08-17T14:55:49.000Z",
        "description": "",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "lightgallery": true,
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 编程"
        ]
    },
    {
        "title": "K8s 编程 - 4 - 代码生成",
        "uri": "posts/cloud_computing/k8s_programming/4-generate-code",
        "content": "Kubernetes               Controller                 Programming Kubernetes                     generate groups sh    hack update codegen sh          vendor k8s io code generator generate groups sh   github com programming kubernetes cnat cnat client go pkg generated   github com programming kubernetes cnat cnat client go pkg apis   cnat v1alpha1     output base    GOPATH  src      go header file  hack boilerplate go txt  arg2          client list informer      arg3   APIGroup       arg4   Group Version    output base           generator               go header                                code generator  deepcopy gen      func t T  DeepCopy     func t T  DeepCopyInto  T              client gen          clientset  informer gen            Informer  lister gen            Lister        List               code generator         generator           APIServer         conversion go                       defaulter gen                                hack verify codegen sh                      CI                                                  doc go     package                     1               doc go          k8s deepcopy gen package    Package v1 v1alpha1 version API      groupName cnat programming kubernetes info package v1alpha1 L1                 DeepCopy                     DeepCopy          k8s deepcopy gen false     L4       APIGroup        Go        Group                 Group         groupName                 HTTP API Path           groupName        groupGoName       CR     Kind               Kind                     Cnat          CNAt        groupGoName CNAt client gen              type Interface interface   Discovery   discovery DiscoveryInterface CNatV1   atv1alpha1 CNatV1alpha1Interface        2              API                        AtSpec defines desired state type AtSpec struct      Schedule desired time command supposed executed     Note  format used UTC time https   www utctime net Schedule string json  schedule omitempty     Command desired command  executed Bash shell  executed  Command string json  command omitempty     Important  Run  make  regenerate code modifying file      AtStatus defines observed state type AtStatus struct      Phase represents state schedule  until command executed    PENDING  afterwards DONE  Phase string json  phase omitempty     Important  Run  make  regenerate code modifying file       genclient     k8s deepcopy gen interfaces k8s io apimachinery pkg runtime Object    runs command given schedule  type struct   metav1 TypeMeta json   inline  metav1 ObjectMeta json  metadata omitempty  Spec AtSpec json  spec omitempty  Status AtStatus json  status omitempty        k8s deepcopy gen interfaces k8s io apimachinery pkg runtime Object    AtList contains list type AtList struct   metav1 TypeMeta json   inline  metav1 ListMeta json  metadata omitempty  Items   At json  items    3 deepcopy gen                 k8s deepcopy gen package            DeepCopy                           DeepCopy           k8s deepcopy gen false       Helper helper struct  not API type  type Helper struct         4 runtime Object   DeepCopyObject     k8s deepcopy gen interfaces k8s io apimachinery pkg runtime Object      runtime Object      DeepCopyObject                   DeepCopyObject                         metav1 TypeMeta        5 client gen        genclient        client gen             client                   List          genclient          status           spec status                   genclient noStatus         UpdateStatus           genclient noStatus               client gen       UpdateStatus                status            status          status                                       namespace                genclient noNamespaced         client       HTTP                     genclient noVerbs     genclient onlyVerbs create delete     genclient skipVerbs get list create update patch delete watch     genclient method Create verb create     result k8s io apimachinery pkg apis meta v1 Status                         L5         Create                   metav1 Status            API            APIServer                       genclient method             scale           scale                   client         genclient method GetScale verb get subresource scale      result k8s io api autoscaling v1 Scale     genclient method UpdateScale verb update subresource scale      input k8s io api autoscaling v1 Scale result k8s io api autoscaling v1 Scale 6 informer gen   lister gen informer gen   lister gen      client gen       genclient                           Informer   Lister      Programming Kubernetes",
        "objectID": "posts/cloud_computing/k8s_programming/4-generate-code",
        "date": "2021-08-19T14:41:24.000Z",
        "description": "",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "lightgallery": true,
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 编程"
        ]
    },
    {
        "title": "K8s 编程 - 5 - 发布 Operator",
        "uri": "posts/cloud_computing/k8s_programming/5-shipping-controllers",
        "content": "Kubernetes               Controller                 Programming Kubernetes           1    1 1 Helm Helm      Kubernetes                  Chart             Kubernetes     Chart            YAML        Chart    template        apiVersion  apps v1 kind  Deployment metadata  name     include  flagger fullname           spec  replicas  1 strategy  type  Recreate selector  matchLabels  app kubernetes io name     template  flagger name       app kubernetes io instance      Release Name    template  metadata  labels  app kubernetes io name     template  flagger name       app kubernetes io instance      Release Name    spec  serviceAccountName     template  flagger serviceAccountName       containers  name  flagger securityContext  readOnlyRootFilesystem  true runAsUser  10001 image       Values image repository        Values image tag                      Some value here              helm install            Chart                  Chart  latest list charts    helm repo update install MySQL    helm install stable mysql Released smiling penguin list running apps    helm ls NAME VERSION UPDATED STATUS CHART smiling penguin 1 Wed Sep 28 12 59 46 2016 DEPLOYED mysql 0 1 0 remove it    helm delete smiling penguin Removed smiling penguin         Controller        Helm Chart                        Artifact Hub          1 2 Kustomize Kustomize                      Kustomize          YAML                          kustomization yaml     imageTags  name  quay io programming kubernetes cnat operator newTag  0 1 0 resources  cnat controller yaml           cnat controller yaml    apiVersion  apps v1beta1 kind  Deployment metadata  name  cnat controller spec  replicas  1 template  metadata  labels  app  cnat spec  containers  name  custom controller image  quay io programming kubernetes cnat operator    kustomize build    cat controller yaml                 apiVersion  apps v1beta1 kind  Deployment metadata  name  cnat controller spec  replicas  1 template  metadata  labels  app  cnat spec  containers  name  custom controller image  quay io programming kubernetes cnat operator 0 1 0l 1 3                                                 ServiceAccount ServiceAccount         RBAC          Controller                         Twitter               Controller                      Red Hat   OperatorHub                CRD   Controller          2                                                           Operator          Operator        Operator         Operator Lifecycle Manager    OLM       OLM                   Operator        3    3 1         CRD Controller               RBAC                           ServiceAccount     Controller       default ServiceAccount                  RBAC     ClusterRole     RoleBinding                     Controller                   Controller                                      watch Service   Deployment          create update            Secret    Role         Secret     MutatingWebhookConfiguration   ValidatingWebhook                                      CustomResourceDefinition     CRD                                           status           audit2rbac                                          3 2              Controller                       Kubernetes               kboom                                                               CI                    Spawning Kubernetes Clusters CI Integration E2E tests    https   xmudrii com posts spawn kubernetes ci    3 3      3 3 1                        stdout      kubectl logs         Kubernetes                  logger interface httplog go       interface           respLogger                 klog Google glog         Kubernetes                  Programming Kubernetes",
        "objectID": "posts/cloud_computing/k8s_programming/5-shipping-controllers",
        "date": "2021-08-20T14:53:38.000Z",
        "description": "",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "lightgallery": true,
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 编程"
        ]
    },
    {
        "title": "K8s 编程 - 6 - Custom APIServer",
        "uri": "posts/cloud_computing/k8s_programming/6-custom-api-server",
        "content": "Kubernetes               Controller                 Programming Kubernetes           Custom APIServer      CRD           Kubernetes      APIServer     API Group                  kubernetes sample apiserver       Custom APIServer     1 Custom APISever           APIServer                                  CRD   APIServer             CRD           Kubernetes            etcd      protobuf     JSON       status    scale                    Finalizer               Kubernetes APIServer   CPU                       API HTTP Endpoint          CRUD                     APIGroup                     APIServer                           Protobuf                      exec  logs  port forward                  Go                                  CRUD     API              APIGroup                Deployment       extension v1         apps v1 2        APIServer    APIGroup               k8s io apiserver             APIServer     Kubernetes                         Pod       Service       Kubernetes     APIServer    kube apiserver   client       APIServer           kube apiserver            APIServer       kube apiserver          APIServer    kube apiserver                 kube aggregator    API         API Aggregate       APIServer                       kube apiserver                                            kube apiserver      apis   HTTP Path                          APIServer            kube aggregator         Proxy         HTTP Path                     apis group name version  Discovery   kube aggregator          APIServer    Discovery Endpoint              apis      apis group name           APIServer  2 1 APIService    CRD        Kubernetes APIServer         APIServer            APIService     apiVersion  apiregistration k8s io v1 kind  APIService metadata  name  name spec  group  API group name version  API group version service  namespace  custom API server service namespace name  API server service port  1234 caBundle  base64 caBundle groupPriorityMinimum  2000 versionPriority  20 spec service         APIServer   service           ClusterIP Service         ExternalName Service  spec caBundle             APIServer         spec groupPriorityMinimum   Group               APIService                                           groupPriorityMinimum          spec versionPriority     Group                              Kubernetes API    groupPriorityMinimum    var apiVersionPriorities   map schema GroupVersion priority   Group      Version   v1     group  18000  version  1      knowledge  nothing below collides  Group   apps   Version   v1     group  17800  version  15    Group   events k8s io   Version   v1     group  17750  version  15    Group   events k8s io   Version   v1beta1     group  17750  version  5    Group   authentication k8s io   Version   v1     group  17700  version  15    Group   authorization k8s io   Version   v1     group  17600  version  15    Group   autoscaling   Version   v1     group  17500  version  15    Group   autoscaling   Version   v2beta1     group  17500  version  9    Group   autoscaling   Version   v2beta2     group  17500  version  1    Group   batch   Version   v1     group  17400  version  15    Group   batch   Version   v1beta1     group  17400  version  9    Group   batch   Version   v2alpha1     group  17400  version  9    Group   certificates k8s io   Version   v1     group  17300  version  15    Group   networking k8s io   Version   v1     group  17200  version  15    Group   policy   Version   v1     group  17100  version  15    Group   policy   Version   v1beta1     group  17100  version  9    Group   rbac authorization k8s io   Version   v1     group  17000  version  15    Group   storage k8s io   Version   v1     group  16800  version  15    Group   storage k8s io   Version   v1beta1     group  16800  version  9    Group   storage k8s io   Version   v1alpha1     group  16800  version  1    Group   apiextensions k8s io   Version   v1     group  16700  version  15    Group   admissionregistration k8s io   Version   v1     group  16700  version  15    Group   scheduling k8s io   Version   v1     group  16600  version  15    Group   coordination k8s io   Version   v1     group  16500  version  15    Group   node k8s io   Version   v1     group  16300  version  15    Group   node k8s io   Version   v1alpha1     group  16300  version  1    Group   node k8s io   Version   v1beta1     group  16300  version  9    Group   discovery k8s io   Version   v1     group  16200  version  15    Group   discovery k8s io   Version   v1beta1     group  16200  version  12    Group   flowcontrol apiserver k8s io   Version   v1beta1     group  16100  version  12    Group   flowcontrol apiserver k8s io   Version   v1alpha1     group  16100  version  9    Group   internal apiserver k8s io   Version   v1alpha1     group  16000  version  9      Append new group end list unsure     use min existing group  100 initial value group     Version set 9  to space around  new group                  API Group         APIService                       2 2 Custom APIServer       Custom APIServer      Kubernetes APIServer           kube aggrega",
        "objectID": "posts/cloud_computing/k8s_programming/6-custom-api-server",
        "date": "2021-08-22T07:32:49.000Z",
        "description": "",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "lightgallery": true,
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 编程"
        ]
    },
    {
        "title": "K8s 编程 - 7 - Admission Webhook",
        "uri": "posts/cloud_computing/k8s_programming/7-admission-webhook",
        "content": "Kubernetes               Controller                 Programming Kubernetes                      agnhost webhook       Admission Webhook       Custom APIServer Admission       APISever     Admission Plugin       Mutating   Validating           Admission Plugin        APISever         APISever          Admission Webhook  Admission Webhook        Admission Plugin       Quota Plugin          Admission Webhook           Webhook Server    APISever          ValidatingWebhookConfiguration MutatingWebhookConfiguration      APISever    Webhook Server  RBAC    Webhook Server     1 WebhookConfiguration      ValidatingWebhookConfiguration MutatingWebhookConfiguration    APIServer    Validating Mutating Webhook Server       ValidatingWebhookConfiguration      MutatingWebhookConfiguration       apiVersion  admissionregistration k8s io v1 kind  ValidatingWebhookConfiguration metadata  name   pod policy example com  webhooks  name   pod policy example com  objectSelector  matchLabels  foo  bar namespaceSelector  matchExpressions    key  runlevel operator  NotIn values    0   1   matchPolicy  Equivalent rules  apiGroups       apiVersions    v1   operations    CREATE   resources    pods   scope   Namespaced  clientConfig  url    https   my webhook example com 9443 my webhook path  service  namespace   example namespace  name   example service  caBundle   Ci0tLS0tQk      tLS0K  admissionReviewVersions    v1    v1beta1   sideEffects  None timeoutSeconds  5 reinvocationPolicy  IfNeeded failurePolicy  Fail webhooks           webhook servers name        webhook               name clientConfig      APIServer           URL    Service admissionReviewVersions      webhook server     AdmissionReview     sideEffects      Webhook      Side effect timeoutSeconds 1 30       APIServer    webhook server               failure policy    rules             objectSelector      object   label     APIServer         namespaceSelector      namespace     APIServer         matchPolicy      rule        reinvocationPolicy            webhook   object     failurePolicy              1 1        1 1 1 rules    webhook        rules     APIServer           webhook server           operation group version resource scope           rules  apiGroups       apiVersions    v1   operations    CREATE   resources    pods   scope   Namespaced  operations              CREATE UPDATE DELETE CONNECT    apiGroups            API Group       core API           API Group apiVersions      API Group                   resources      API Group     resource            resource       subresource             resource   subresource  pods        Pod      subresource    status         resource    status subresource scope          resource   subresource        Cluster Namespaced   1 1 2 objectSelector    objectSelector         object   label                              rules             objectSelector         label foo bar   apiVersion  admissionregistration k8s io v1 kind  MutatingWebhookConfiguration     webhooks  name  my webhook example com objectSelector  matchLabels  foo  bar rules  operations    CREATE   apiGroups        apiVersions        resources        scope          1 1 3 namespaceSelector    namespaceSelector         object   namespace        apiVersion  admissionregistration k8s io v1 kind  MutatingWebhookConfiguration     webhooks  name  my webhook example com namespaceSelector  matchExpressions  key  runlevel operator  NotIn values    0   1   rules  operations    CREATE   apiGroups        apiVersions        resources        scope   Namespaced      1 1 4 matchPolicy            API Group                 Deployment    extensions v1beta1 apps v1beta1    matchPolicy      rules               Exact              Equivalent                   APIGroup                 matchPolicy       extensions v1beta1   Deployment    apiVersion  admissionregistration k8s io v1 kind  ValidatingWebhookConfiguration     webhooks  name  my webhook example com matchPolicy  Equivalent rules  operations    CREATE   UPDATE   DELETE   apiGroups    apps   apiVersions    v1   resources    deployments   scope   Namespaced                            extensions v1beta1 Deployment   APIServer        v1            Webhook          1 2   Webhook      1 2 1 URL URL     webhook server         URL                          URL    user password        URL               apiVersion  admissionregistration k8s io v1 kind  MutatingWebhookConfiguration     webhooks  name  my webhook example com clientConfig  url    https   my webhook example com 9443 my webhook path      1 2 2 Service    Webhook Server             Service         port     443 path          apiVersion  admissionregistration k8s io v1 kind  MutatingWebhookConfiguration     webhooks  name  my webhook example com clientConfig  caBundle   Ci0tLS0tQk      tLS0K  service  namespace  my service namespace name  my service name path   my path port  1234     1 3 Side effects       Webhook Server        AdmissionReview                                   Side effect  sideEffects        Webhook Server      dryRun      dryRun true        Unknown         dryRun        Webhook             None ",
        "objectID": "posts/cloud_computing/k8s_programming/7-admission-webhook",
        "date": "2021-09-21T06:58:07.000Z",
        "description": "",
        "weight": 4,
        "draft": false,
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 编程"
        ]
    },
    {
        "title": "K8s 编程 - 8 - Custom Scheduler",
        "uri": "posts/cloud_computing/k8s_programming/8-extend-scheduler",
        "content": "kube scheduler               Kubernetes Scheduler                                Kubernetes                1 Scheduler     Scheduler Framework                         Plugin                                          Plugin                         Plugin       KubeSchedulerConfiguration        1 1 QueueSort        scheduling queue    Pod               QueueSort Plugin     QueueSort Plugin            Less Pod1  Pod2      1 2 PreFilter        Pod                    Pod               PreFilter Plugin      error             1 3 Filter             Pod   Node        Node            Filter Plugin        Filter Plugin   Node              Filter Plugin            Node       Filter  1 4 PostFilter       Filter                Pod        Node                          PostFilter Plugin   Node     Schedulable     PostFilter Plugin               PostFilter Plugin             Pod     Pod  1 5 PreScore                     Score Plugin                PreScore      error         1 6 Score             Node            Node      Score Plugin                              NormalizeScore     Scheduler                       1 7 NormalizeScore             Node       Node          NormalizeScore Plugin             Plugin                                  Plugin BlinkingLightScorer      Node      blinking lights       func ScoreNode _ v1 pod  n v1 Node   int  error    return getBlinkingLightCount n         NodeScoreMax    blinking lights                 BlinkingLightScorer            func NormalizeScores scores map string int    highest    0 _  score    range scores   highest   max highest  score    node  score    range scores   scores node    score NodeScoreMax highest          NormalizeScore Plugin    error        1 8 Reserve Reserve Plugin       Reserve   Unreserve     Reserve   Unreserve                           Node    Pod                   Pod     Node               Pod   Node           Pod      Node                           Pod                     Pod    reserved              Unreserve     Postbind           1 9 Permit Permit Plugin                          Node  Permit Plugin         approve      Permit Plugin approve    Pod             deny      Permit Plugin deny    POod                    Unreserve     wait with timeout       Permit Plugin    wait     Pod    waiting Pod list         Pod   approve     wait timeout         deny Pod  1 10 PreBind         Pod                PreBind Plugin      network volume          Node       PreBind Plugin    error Pod                  1 11 Bind         Pod     Node     Bind Plugin              Bind Plugin           Pod      Bind Plugin       Pod     Bind Plugin      1 12 PostBind Post bind Plugin                                    2 Scheduling Policy Scheduling Policy                     Predicates   Priorities             Extender          Scheduling Policy     yaml    json               kind     Policy    apiVersion     v1    predicates       name    NoVolumeZoneConflict      name    MaxEBSVolumeCount      name    MaxAzureDiskVolumeCount      name    NoDiskConflict      name    GeneralPredicates      name    PodToleratesNodeTaints      name    CheckVolumeBinding      name    MaxGCEPDVolumeCount      name    MatchInterPodAffinity        priorities       name    SelectorSpreadPriority    weight   1     name    InterPodAffinityPriority    weight   1     name    LeastRequestedPriority    weight   1     name    BalancedResourceAllocation    weight   1     name    NodePreferAvoidPodsPriority    weight   1     name    NodeAffinityPriority    weight   1     name    TaintTolerationPriority    weight   1      extenders        urlPrefix    http   127 0 0 1 10262 scheduler    filterVerb    filter    preemptVerb    preempt    weight   1   httpTimeout   30000000000   enableHttps   false       predicates    Predicate          priorities    Priority          extenders       Webhook                 URL     kube scheduler          kube scheduler   policy config file      Policy         kube scheduler   policy configmap     policy configmap namespace      ConfigMap    Policy    1 22    kube scheduler       scheduler name                      kube scheduler   port 10261   leader elect true   lock object namespace pingcap   lock object name my scheduler   scheduler name my scheduler   policy configmap my scheduler policy   policy configmap namespace pingcap                  my scheduler         Pod     spec schedulerName                  1 22   kube scheduler         scheduler name              Scheduler Policy                         Multiple Profiles          Scheduler Policy                                Scheduling Profiles        Schedule Policy          default scheduler        Scheduling Profiles              3 Scheduling Profiles                     Scheduling Profiles   kube scheduler             kube scheduler      kube scheduler   config    Scheduling Profiles        v1beta1    v1beta2     KubeSchedulerConfiguration               apiVersion  kubescheduler config k8s io v1beta2 kind  KubeSchedulerConfiguration clientConnection  kubeconfig   etc srv kubernetes kube scheduler kubeconfig 3 1    Plugin   KubeSchedulerConfi",
        "objectID": "posts/cloud_computing/k8s_programming/8-extend-scheduler",
        "date": "2021-09-22T12:19:47.000Z",
        "description": "",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "lightgallery": true,
        "tags": [
            "k8s",
            "云计算"
        ],
        "categories": [
            "Kubernetes 编程"
        ]
    },
    {
        "title": "Prom 学习 - 基本概念",
        "uri": "posts/cloud_computing/prometheus-learning/basic",
        "content": "1      Prometheus                   time series                                                                   Sample       label   Metric name                                  prometheushttprequest_total                 Metric       Metric Name   Labels              Sample             1 1 Metric Metric                                        Notation  Metric name          Labels             nodecpuseconds_total cpu  0  mode  idle   2 01377426e 06 nodecpuseconds_total cpu  0  mode  iowait   1639 03 nodecpuseconds_total cpu  1  mode  idle   1 9973224e 06 nodecpuseconds_total cpu  1  mode  iowait   1535 02      Labels              Metric        Metric name   Labels                   _       label                     Prometheus                name_          name  nodecpuseconds_total   cpu  0  mode  idle   1 3 Sample Sample                               Sample                    Sample         metric   metric name        labelsets value         float64 timestamp           ms Prometheus            sample    sample                2 Metric       Prometheus     4   Metric     Counter Gauge Histogram Summary 2 1 Counter Counter                                        0                        0     Counter          xxx_total   TYPE nodecpuseconds_total counter nodecpuseconds_total cpu  0  mode  idle   2 01526517e 06 nodecpuseconds_total cpu  0  mode  iowait   1640 01 2 2 Gauge Gauge                                                              Gauge                HELP node_load1 1m load average  TYPE node_load1 gauge node_load1 1 6 HELP node_load15 15m load average  TYPE node_load15 gauge node_load15 1 01 2 3 Histogram Histogram                              bucket    histogram        bucket      le             sum         count                         HTTP     HELP prometheushttprequestdurationseconds Histogram latencies HTTP requests  TYPE prometheushttprequestdurationseconds histogram prometheushttprequestdurationseconds_bucket handler     le  0 1   1 prometheushttprequestdurationseconds_bucket handler     le  0 2   1 prometheushttprequestdurationseconds_bucket handler     le  0 4   1 prometheushttprequestdurationseconds_bucket handler     le  1   1 prometheushttprequestdurationseconds_bucket handler     le  3   1 prometheushttprequestdurationseconds_bucket handler     le  8   1 prometheushttprequestdurationseconds_bucket handler     le  20   1 prometheushttprequestdurationseconds_bucket handler     le  60   1 prometheushttprequestdurationseconds_bucket handler     le  120   1 prometheushttprequestdurationseconds_bucket handler     le   Inf   1 prometheushttprequestdurationseconds_sum handler      0 000184525 prometheushttprequestdurationseconds_count handler      1 bucket le  0 1             0 1s      1   le  0 2             0 2s      1       le   Inf              Inf      1   sum               0 000184525 count          1           bucket            2 4 Summary summary                                summary         bucket            quantile        sum         counter                     wal_fsync            HELP prometheustsdbwalfsyncduration_seconds Duration WAL fsync  TYPE prometheustsdbwalfsyncduration_seconds summary prometheustsdbwalfsyncduration_seconds quantile  0 5   0 012352463 prometheustsdbwalfsyncduration_seconds quantile  0 9   0 014458005 prometheustsdbwalfsyncduration_seconds quantile  0 99   0 017316173 prometheustsdbwalfsyncdurationsecondssum 2 888716127000002 prometheustsdbwalfsyncdurationsecondscount 216 bucket quantile  0 5    50    wal_fsync        0 012352463 quantile  0 9    90    wal_fsync        0 014458005 quantile  0 99    99    wal_fsync        0 017316173 sum    wal_fsync        2 888716127000002 count    wal_fsync    216           bucket            3        Prometheus                  IP Port     Intsance                    Job     prometheus yml              scrape_configs  job_name   prometheus  static_configs  targets    localhost 9090   job_name   node  static_configs  targets    localhost 9100   scrapeconfigs jobname               job        Prometheus   Node  scrapeconfigs staticconfigs targets            Instance  Prometheus                         job     instance     label             prometheushttprequests_total code  200   handler     ready   instance  localhost 9090   job  prometheus              label                   honor_label                          Instance Prometheus                  Instance              1      0 up instance  localhost 9090   job  prometheus   1 scrapedurationseconds      Instance         scrapedurationseconds instance  localhost 9090   job  prometheus   0 006962203 scrapesamplespostmetricrelabeling   Instance        relabel             scrapesamplespostmetricrelabeling instance  localhost 9090   job  prometheus   723 scrapesamplesscraped      Instance         scrapesamplesscraped instance  localhost 9090   job  prometheus   723         Blog       Prometheus",
        "objectID": "posts/cloud_computing/prometheus-learning/basic",
        "date": "2021-07-05T14:04:28.000Z",
        "description": "Prometheus 的基本概念",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "prometheus",
            "monitor"
        ],
        "categories": [
            "Prometheus 学习"
        ]
    },
    {
        "title": "Prom 学习 - Grafana 基础",
        "uri": "posts/cloud_computing/prometheus-learning/grafana-basic",
        "content": "1      1 1     Data Source Grafana                         Data Source         Graphite InfluxDB OpenTSDB Prometheus Elasticsearch CloudWatch                         Dashboard          Panel                                      Server                     Grafana                       Browser                              1 2    Organization Grafana               Organization                                  1 3    User       User   Grafana                           Role              Grafana              1 4    Panel       Panel                           Prometheus    PromQL                  Grafana                    Time series                    Grafana                                  JSON                        1 5   Row      Row                    12             1 6       Query Editor              Query Editor                                1 7     Dashboard                     Dashboard                                                      Export              JSON           Import   JSON                    2      2 1                   Create          Dashboard     Setting             General   General                       Name         Description         Tages       label Editable   Editable         Read only          Timezone        Auto refresh                           Variables                                                        Variables        Interval                        Query                                Datasource                       Custom                 Constant          Ad hoc filter              Text box                  2 2      2 2 1 Graph       Query        Data source          Query options                         Query                               Legend format                Panel options      Title        Description           Axes Axes                        Y          Legend                          Display Display                  Prometheus",
        "objectID": "posts/cloud_computing/prometheus-learning/grafana-basic",
        "date": "2021-07-17T08:19:12.000Z",
        "description": "Grafana 基础",
        "lightgallery": true,
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "prometheus",
            "monitor"
        ],
        "categories": [
            "Prometheus 学习"
        ]
    },
    {
        "title": "Prom 学习 - PromQL",
        "uri": "posts/cloud_computing/prometheus-learning/promql",
        "content": "1                                                                                                                                                                                                  v                                  Prometheus                                                         Metric      label      PromQL                      instant vector                                                                     range vector                                                                        scalar                               string                2 Selector 2 1 Instant Vector Selector Instant Vector Selector                         label                              label                                                                                                                job  mysqld_node                   job   redis_expoter                  job   node_                     job   nginx                 mnt        mnt local_pv             nodefilesystemsizebytes mountpoint    mnt     mountpoint    mnt localpv               Metric Name   Prometheus       label  name           name  xxx        Metric                Metric                                       offset                             nodefilesystemsize_bytes mountpoint    mnt      offset 1d 2 2 Range Vector Selectors Range Vector Selectors                    label                                          duration              s    m    h     d    w    y                     1m      nodefilesystemsizebytes mountpoint    mnt     mountpoint    mnt localpv      1m                                                                offset           nodefilesystemsizebytes mountpoint    mnt     mountpoint    mnt localpv      1m  offset 1d 3      Prometheus                                                                                                      param      without by   aggr op          param            vector        without by              label                 without          label         label       label         label            without    by     by            label               without        CPU         avg nodecpuseconds_total  without cpu   instance  localhost 9101   job  prometheus   mode  idle   2701333 81  instance  localhost 9101   job  prometheus   mode  iowait   1696 59625  instance  localhost 9101   job  prometheus   mode  irq   0  instance  localhost 9101   job  prometheus   mode  nice   1214 26125  instance  localhost 9101   job  prometheus   mode  softirq   4898 343750000001  instance  localhost 9101   job  prometheus   mode  steal   3861 9112499999997  instance  localhost 9101   job  prometheus   mode  system   49185 7  instance  localhost 9101   job  prometheus   mode  user   101896 9975 without                cpu  label        label          label                           CPU     mode         avg nodecpuseconds_total  by mode   mode  user   101910 36750000001  mode  idle   2701600 49625  mode  iowait   1696 73375  mode  irq   0  mode  nice   1214 3175  mode  softirq   4899 33375  mode  steal   3862 2212499999996  mode  system   49191 16              label         label  mode        mode                3 1             Prometheus                                                                                                                                                                          sum                       max                         min                         avg                         stddev                                     stdvar                      count                     countvalues  label             value                    countvalues     value          label     bottomk N                       N                 without                 topk N                       N                 without                 quantile N          0  N   100                Histogram       3 2                            without                   label        label      label                                               4 PromQL     4 1                          6                                                                                                                               5 1  3 scalar 18                                                        nodediskreadbytestotal 1024 1024  device  dm 0   instance  localhost 9101   job  prometheus   26745 40966796875  device  dm 1   instance  localhost 9101   job  prometheus   3 28515625  device  dm 2   instance  localhost 9101   job  prometheus   2623 3681640625  device  sda   instance  localhost 9101   job  prometheus   29390 4736328125                                                   label                                           nodediskreadbytestotal nodediskwrittenbytestotal  device  dm 0   instance  localhost 9101   job  prometheus   700855357952  device  dm 1   instance  localhost 9101   job  prometheus   3444736  device  dm 2   instance  localhost 9101   job  prometheus   240470945280  device  sda   instance  localhost 9101   job  prometheus   941364913152 4 2                            6                                                                 ",
        "objectID": "posts/cloud_computing/prometheus-learning/promql",
        "date": "2021-07-08T14:31:22.000Z",
        "description": "PromQL 概念以及语法",
        "lightgallery": true,
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "prometheus",
            "monitor"
        ],
        "categories": [
            "Prometheus 学习"
        ]
    },
    {
        "title": "KVM 虚拟机的存储与网络总结",
        "uri": "posts/cloud_computing/vm/KVM虚拟机的存储与网络",
        "content": "libvirt                                       1 virtio    KVM   IO                QEMU               KVM                      Paravirtualized Drivers                    virtio             1 1     I O              I O                        Device Driver    I O       KVM                       I O     sharing page   KVM          QEMU          qemu           I O     QEMU        I O               Emulation Code    I O         I O            I O              I O               DMA      I O   QEMU                                 KVM       DMA         KVM        I O                          QEMU          DMA         QEMU    I O                                      I O            VMEntry VMExit                         1 2 virtio      virtio      Hypervisor     API                         virtio     Hypervisor                    virtio                      fronded                virtio blk virtio net              backend    QEMU           I O     virtio                                                  Hypervisor                                             0          virtio net                  virtio ring          ring buffer                                           I O                                   I O           virtio               virtio    virtio              virtio         virtio               Linux                      virtio                  virtio   root kvm guest     lsmod   grep virtio virtio_net 28024 0 virtio_pci 22913 0 virtioring 21524 2 virtionet virtio_pci virtio 15008 2 virtionet virtiopci    virtio virtioring virtiopci        virtio API       virtio            1 3 vhost         virtio                   QEMU      QEMU                                                    vhost                vhost                                virtio                       vhost net        vhost blk               vhost    lsmod   grep vhost vhost_net 28672 1 vhost 53248 1 vhost_net vhost_iotlb 16384 1 vhost 1 4            virtio                                KVM       QEMU                    KVM            virtio     KVM                        QEMU                           virtio                                       virtio               QEMU           QEMU            care         virtio                     virtio                   virtio            QEMU                 vhost                        2        2 1 PCI        PCI                  PCI   PCI E                                            QEMU                                        Intel                Intel R Virtualization Technology Directed I O  VT d    AMD       AMD Vi      IOMMU          x86           VT d   BIOS       VT d              VT d              vfio pci       3 10              intel_iommu on intel       modprobe vfio_pci   lsmod   grep vfio vfio_pci 53248 0 vfiovirqfd 16384 1 vfiopci vfioiommutype1 32768 0 vfio 36864 2 vfioiommutype1 vfio_pci irqbypass 16384 8 vfio_pci kvm 2 2 SR IOV VT d                                         PCI_SIG        SR IOV   Single Root I O Virtualizaiton Sharing                                           SR IOV                    SR IOV         function   PF        Physical Function   PF        PCI e       SR IOV                  VF           function      VF        Virtual Function     PF           PCI e                  function     SR IOV          VF               DMA         Hypervisor                   SR IOV             PCI            Function 1   PF      VF     VF              BAR Base Address Register         Hypervisor     VF                                VF                Intel VT x   VT d                           DMA                      Hypervisor               VF                               SR IOV          Intel VT x   VT d   AMD   SVM   IOMMU                  SR IOV       Linux        PCI     Capabilities              SR IOV       lspci  s 82 00 0  v 82 00 0 Ethernet controller  Intel Corporation I350 Gigabit Network Connection  rev 01  Flags  bus master  fast devsel  latency 0  IRQ 38  NUMA node 1 Memory d0100000  32 bit  non prefetchable   size 1M  I O ports c020  size 32  Memory d0204000  32 bit  non prefetchable   size 16K  Expansion ROM d0400000  disabled   size 1M  Capabilities   40  Power Management version 3 Capabilities   50  MSI  Enable  Count 1 1 Maskable  64bit  Capabilities   70  MSI X  Enable  Count 10 Masked  Capabilities   a0  Express Endpoint  MSI 00 Capabilities   100  Advanced Error Reporting Capabilities   140  Device Serial Number a4 dc be ff ff 17 8d 52 Capabilities   150  Alternative Routing ID Interpretation  ARI  Capabilities   160  Single Root I O Virtualization  SR IOV  Capabilities   1a0  Transaction Processing Hints Capabilities   1c0  Latency Tolerance Reporting Capabilities   1d0  Access Control Services Kernel driver use  igb Kernel modules  igb  Capabilities    160  Single Root I O Virtualization  SR IOV          SR IOV                     3                 4k              fio  thread  name   DISK   filename   DISK     ioengine libaio  direct 1  bs 4k  rw randrw  iodepth 32    size 8G  rw readrw                                               3 1                    IO       QEMU   Q",
        "objectID": "posts/cloud_computing/vm/KVM虚拟机的存储与网络",
        "date": "2020-11-28T09:29:39.000Z",
        "description": "总结 KVM 虚拟机使用存储与网络的方式",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "虚拟机",
            "KVM",
            "云计算"
        ],
        "categories": [
            "VM"
        ]
    },
    {
        "title": "制作虚拟机镜像",
        "uri": "posts/cloud_computing/vm/制作虚拟机镜像",
        "content": "libvirt         domain          domain                         virsh define   start    virt install                centos       KVM         1   ISO                                                1 1                  ISO            ISO                                              ISO     virt install                                  virt install   name guest1_fromiso   memory 2048   vcpus 2     disk size 8   location CentOS 7 x86_64 DVD 2003 iso     os type Linux   os variant centos7 0   virt type kvm     boot menu on   graphics none   console pty   extra args  console ttyS0                                location      iso       boot menu on                         console pty   extra args  console ttyS0                   graphics none           network bridge virbr0             libvirt       bridge             libvirt            dhcp                    libvirt                    disk size 8 disk                      8G   qcow2                     var lib libvirt images                                                   domain                             virsh list Id Name State                                                      18 guest1_fromiso running 1 2                                             RedHat     kickstart                                        KICKSTART INSTALLATIONS 2    Cloud Image                                                                                                            hostname          cloud init                                                 cloud init     2 1 cloud init                             cloud init              cloud init                            hostname ssh key password     1       metadata            cloud init     userdata    cloud init                  yaml      datasource cloud init                                   NoCloud datasource    2       cloud init           Generator        systemd     generator         cloud init target target                  unit                 cloud init        generator     cloud init          etc cloud cloud init disabled                proc cmdline      cloud init disabled                   KERNEL_CMDLINE             target       unit      Local   cloud init local service             local    datasource                               metadata                      dhcp eth0       etc cloud cloud cfg            network   config  disabled              Init Config Final       service   cloud init service cloud config service  cloud final service     local                     metadata    etc cloud cloud cfg                      module       cloud init                         cloud init clean               var log cloud init log     cloud init          2 2                      cloud image               wget https   mirrors ustc edu cn centos cloud centos 7 images CentOS 7 x86_64 GenericCloud 2003 qcow2                      virt install                     virt install                                                           virt customize  a CentOS 7 x86_64 GenericCloud 2003 qcow2   root password password yourpassword         cloud init      datasource                 NoCloud          s        disk        user data   meta date        cat meta data instance id  guest1 local hostname  guest1   cat user data  cloud config chpasswd  expire  false list    root  password1 ssh_pwauth  True    disk       userdata   metadata        genisoimage  output seed iso  volid cidata  joliet  rock user data meta data             virt install   memory 2048   vcpus 2   name guest2     disk CentOS 7 x86_64 GenericCloud 2003 qcow2   disk seed iso     os type Linux   os variant centos7 0   virt type kvm     graphics none   network default     import              disk CentOS 7 x86_64 GenericCloud 2003 qcow2          import                                 disk seed iso    cloud init datasource                   cloud init                                       CentOS 7 x86_64 GenericCloud 2003 qcow2                  libvirt              etc libvirt qemu guest1 xml     CREATING GUESTS VIRT INSTALL KICKSTART INSTALLATIONS cloud init Documentation",
        "objectID": "posts/cloud_computing/vm/制作虚拟机镜像",
        "date": "2020-10-31T09:47:42.000Z",
        "description": "制作虚拟机镜像",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "虚拟机",
            "KVM",
            "云计算"
        ],
        "categories": [
            "VM"
        ]
    },
    {
        "title": "Ginkgo 学习",
        "uri": "posts/language/golang/ginkgo-学习",
        "content": "1    ginkgo     BDD    Kubernetes   E2E                 ginkgo      Go              ginkgo bootstrap            package ginkgo_test import    testing     github com onsi ginkgo     github com onsi gomega    func TestGinkgo t  testing T       Gomega    Ginkgo       Gomega         Ginkgo RegisterFailHandler Fail          RunSpecs t   Ginkgo Suite                      Spec      ginkgo   go test            2    Spec 2 1 Describe Context              ginkgo                   Describe          Context                It                  Describe                         Context                           Root Describe var _   Describe  Book   func        Sub Describe Describe  Categorizing book length   func        Context1 Context  With 300 pages   func     It  should novel   func                           Context2 Context  With fewer 300 pages   func     It  should short story   func                                           Describe   Context                         2 2 BeforeEach AfterEach BeforeEach                                Root Describe var _   Describe  Book   func     var            BeforeEach          longBook Book shortBook Book   BeforeEach func     longBook   Book  Title   Les Miserables   Author   Victor Hugo   Pages  1488    shortBook   Book  Title   Fox Socks   Author   Dr  Seuss   Pages  24          Sub Describe Describe  Categorizing book length   func        Context1 Context  With 300 pages   func     It  should novel   func                           Context2 Context  With fewer 300 pages   func     It  should short story   func                                 AfterEach                       2 3 JustBeforeEach JustAfterEach JustBeforeEach                  BeforeEach       JustBeforeEach                          BeforeEach                     JustBeforeEach           BeforeEach    NewBookFromJSON           var _   Describe  Book   func     var   book Book err error json string   BeforeEach func             json       title   Les Miserables    author   Victor Hugo    pages  1488       JustBeforeEach func               book  err   NewBookFromJSON json     Describe  loading JSON   func     Context  when JSON parses succesfully   func        Context  when JSON fails parse   func     BeforeEach func             json       title   Les Miserables    author   Victor Hugo    pages  1488oops                    JustAfterEach            AfterEach       2 4 BeforeSuite AfterSuite BeforeSuite              AfterSuite              func TestBooks t  testing T    RegisterFailHandler Fail  RunSpecs t   Books Suite     var _   BeforeSuite func     dbClient   db NewClient   err   dbClient Connect dbRunner Address    Expect err  NotTo HaveOccurred       var _   AfterSuite func     dbClient Cleanup      2 5 SynchronizedBeforeSuite SynchronizedAfterSuite SynchronizedBeforeSuite                                                          nodes                                    SynchronizedBeforeSuite SynchronizedAfterSuite     BeforeSuite AfterSuite                                                    client  var _   SynchronizedBeforeSuite func     byte              port    4000   config GinkgoConfig ParallelNode dbRunner   db NewRunner   err    dbRunner Start port  Expect err  NotTo HaveOccurred    return   byte dbRunner Address       func data   byte                 dbAddress    string data  dbClient   db NewClient   err   dbClient Connect dbAddress  Expect err  NotTo HaveOccurred              SynchronizedAfterSuite        var _   SynchronizedAfterSuite func                  dbClient Cleanup      func                dbRunner Stop      2 6                                       var _   Describe  Browsing library   func     BeforeEach func     By  Fetching token logging in      It  should pleasant experience   func     By  Entering aisle         3 Spec Runner 3 1 Pending Spec      Spec         P X             Pending Spec        PDescribe  some behavior   func            PContext  some scenario   func            PIt  some assertion   PMeasure  some measurement   XDescribe  some behavior   func            XContext  some scenario   func            XIt  some assertion   XMeasure  some measurement             noisyPendings false         3 2 Skiping Spec    Skip                   Spec  It  should something  can   func      someCondition          Spec     Return    Skip  special condition wasn t met                   skip          Spec  3 3 Focused Specs    F                Focused Spec FDescribe  some behavior   func            FContext  some scenario   func            FIt  some assertion   func                             focus       Spec  3 3 Parallel Specs     Ginkgo                ginkgo  p        Ginkgo                      ginkgo  nodes N               go test            Spec       4 Gomega Gomega            4 1        Expect                   Should To                   ShouldNot NotTO ToNot                 Expect ACTUAL  Should Equal EXPECTED   Expect ACTUAL  To Equal EXPECTED   Expect ACTUAL  ShouldNot Equal EXPECTED   Expect ACTUAL  ToNot Equal EXPECTED   Expect ACTUAL  NoTo Equal EXPECTED          Matcher interface             4 2 Ma",
        "objectID": "posts/language/golang/ginkgo-学习",
        "date": "2021-06-27T07:26:25.000Z",
        "description": "Ginkgo 基本用法",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "Test"
        ],
        "categories": [
            "Golang"
        ]
    },
    {
        "title": "Go 内存管理总结",
        "uri": "posts/language/golang/Go-内存管理总结",
        "content": "Golang                                                                  go 1 15 6  1 Linux                  Linux                             Linux                                   virtual address space                                                    mmap                                           mmap              mmap     brk                                    glibc   malloc     free     mmap                                           pagecache                   addressspace                                                                                                                 2 PC   SP Goroutine                                                           PC   SP  2 1 PC        PC   Program Counter    CPU                CPU                  PC   PC   1                                 PC                     goroutine    JMP       G        2 2 SP       SP   stack pointer                                         SP            SP                                 SP                 goroutine             goroutine                  goroutine          Linux                                            mmap           Go             mmap          SP                  goroutine               3 Goroutine         G               stack lo  G                 stack hi G         stackguard0           G          StackGuard                    StackSmall                     g         stack    runtime runtime2 go               type g struct      Stack parameters     stack describes actual stack memory   stack lo  stack hi      stackguard0 stack pointer compared Go stack growth prologue     stack lo StackGuard normally  StackPreempt trigger preemption     stackguard1 stack pointer compared C stack growth prologue     stack lo StackGuard g0 gsignal stacks      0 goroutine stacks  trigger call morestackc  and crash   stack stack    offset known runtime cgo stackguard0 uintptr    offset known liblink stackguard1 uintptr    offset known liblink          stack      G                            stack   stackguard0        g                      0x10                      stack    runtime runtime2 go      Stack describes Go execution stack     bounds stack exactly  lo  hi      no implicit data structures either side  type stack struct   lo uintptr hi uintptr   3 1   G      malg             G            2KB      Allocate new g  stack big enough stacksize bytes  func malg stacksize int32   g   newg    new g  stacksize    0   stacksize   round2 _StackSystem   stacksize          goroutine g0        systemstack func             stack newg stack   stackalloc uint32 stacksize            stackguard0    newg stackguard0   newg stack lo   _StackGuard newg stackguard1    uintptr 0     Clear bottom word stack  record g    gsignal stack during VDSO ARM ARM64   uintptr  unsafe Pointer newg stack lo     0   return newg           systemstack             M   g0           Why     G                      G         G              G                              systemstack           g0                    3 2      stackalloc                   G                                                                                                             32KB       heap             1         stackpoolalloc          Allocates stack free pool  called    stackpool order  item mu held  func stackpoolalloc order uint8  gclinkptr   list     stackpool order  item span s    list first        s    nil                       s   mheap allocManual StackCacheSize  PageShift   memstats stacksinuse           x    s manualFreeList x ptr      nil   throw  span no free stacks     s manualFreeList   x ptr   next        return x              stackpool        stack           Go                  Go                                  mmap                         Don t split stack method may invoked without valid G     prevents us allocating stack    go nosplit func sysAlloc n uintptr  sysStat  uint64  unsafe Pointer   p  err    mmap nil  n  PROTREAD PROTWRITE  MAPANON MAPPRIVATE   1  0  err    0   err    _EACCES   print  runtime  mmap  access denied n   exit 2    err    _EAGAIN   print  runtime  mmap  locked memory  check  ulimit  l    n   exit 2    return nil   mSysStatInc sysStat  n  return p      mmap                             3 3      3 3 1      Go                                G                        main      test     go build  gcflags   l   o test main go   go tool objump  s  main  test  test TEXT main test SB   root yusihao onething BizImages main go main go 3 0x45dc80 MOVQ FS 0xfffffff8  CX    CX     G    main go 3 0x45dc89 CMPQ 0x10 CX   SP    CX 0x10    g stackguard0      SP        main go 3 0x45dc8d JBE 0x45dccf       SP         SP                      Why                        stackguard0   stack lo                                   SP                                   SP                      3 3 2                     2x                                          morestack           Called during function prolog when stack needed     R3 prolog s LR    using NOFRAME means not save LR stack        traceback routines morestack g0    top stack  for example  morestack calling newstack    ca",
        "objectID": "posts/language/golang/Go-内存管理总结",
        "date": "2021-01-05T10:28:41.000Z",
        "description": "Golang 协程栈实现，堆内存管理实现",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "Golang",
            "Golang 原理"
        ],
        "categories": [
            "Golang"
        ]
    },
    {
        "title": "Go 垃圾收集总结",
        "uri": "posts/language/golang/Go-垃圾收集总结",
        "content": "Golang                                                             go 1 15 6  1      1 1                                Mutator             GC                                    GC                                                1 2                GC           Mark Sweep         Golang                                                                                                                                               3                                                                                               Mutator             Mutator                                   dangling pointer              3       D    D                     Mutator                                          Tri color invariant                                                                                                                                                                                                  1 3                                             GC           barrier       Go                                                             CPU                               1 3 1       Dijkstra                                                                                                             Dijkstra                               field       oldobj             field   newobj        oldobj                         TODO 1 3 2       Yuasa                                                            1 3 3 Go      Go                                                                             GC                                     STW   GC                                                2                                     2 1    2 1 1        runtime              groutine                                                   work        var work struct   full lfstack    lock free list full blocks workbuf empty lfstack    lock free list empty blocks workbuf   full                  groutine                   empty                 groutine                        goroutine         gcWork                              type workbuf struct   workbufhdr obj   _WorkbufSize   unsafe Sizeof workbufhdr       sys PtrSize uintptr   type gcWork struct      wbuf1 wbuf2 primary secondary work buffers        thought stack work buffers     pointers concatenated  When pop last pointer     shift stack one work buffer bringing new    full buffer discarding empty one  When fill    buffers  shift stack down one work buffer    bringing new empty buffer discarding full one     one buffer s worth hysteresis     amortizes cost getting putting work buffer    least one buffer work reduces contention    global work lists        wbuf1 always buffer we re currently pushing    popping wbuf2 buffer will discarded    next        Invariant  wbuf1 wbuf2 nil neither are  wbuf1  wbuf2  workbuf     wbuf1   wbuf2                      wbuf1    wbuf1                 wbuf1   wbuf2                        work free    work list             wbuf1  gcWork           gcWork tryGetFast      wbuf1        obj      gcWork tryGet      wbuf1    wbuf2    work full      obj  gcWork putFast            obj    wbuf1  gcWork put            obj    wbuf1    wbuf2    work empty  gcWork balance      wbuf2 wbuf1    work full    gcWork empty         gcWork              obj                                       goroutine   gcWork        obj          obj      obj      gcWork         gcWork     2 1 2 groutine                             groutine                       gcWork  groutine   gcWork      object            object          object      gcWork     2 3      gcWork                             runtime               gcWork    object             gcWork       mark   object             gcWork       mark   object     P            groutine    gcDrain      runtime mgcmark go      gcDrain scans roots objects work buffers  blackening grey    objects until unable work  may return    GC done  it s caller s responsibility balance work    Ps        flags gcDrainUntilPreempt    0  gcDrain returns when g preempt    set        flags gcDrainIdle    0  gcDrain returns when work    do        flags gcDrainFractional    0  gcDrain self preempts when    pollFractionalWorkerExit   returns true  implies    gcDrainNoBlock        flags gcDrainFlushBgCredit    0  gcDrain flushes scan work    credit gcController bgScanCredit every gcCreditSlack units    scan work        gcDrain will always return pending STW       go nowritebarrier func gcDrain gcw  gcWork  flags gcDrainFlags    gp    getg   m curg preemptible    flags gcDrainUntilPreempt    0 flushBgCredit    flags gcDrainFlushBgCredit    0 idle    flags gcDrainIdle    0 initScanWork    gcw scanWork            check               checkWork    int64 1  work markrootJobs   break   markroot gcw  job  check    nil    check     goto done                 gp preempt     preemptible    atomic Load  sched gcwaiting     0     work full    0   gcw balance          gcWork      object addr       b    gcw tryGetFast   b    0   b   gcw tryGet   b    0      Flush write barrier    buffer  may create    work  wbBufFlush nil  0  b   gcw tryGet       b    0                  break         object     ",
        "objectID": "posts/language/golang/Go-垃圾收集总结",
        "date": "2021-01-14T12:40:47.000Z",
        "description": "Golang 三色标记收集算法，算法实现原理",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "Golang",
            "Golang 原理"
        ],
        "categories": [
            "Golang"
        ]
    },
    {
        "title": "Go 并发调度总结",
        "uri": "posts/language/golang/Go-并发调度总结",
        "content": "Golang                                                               go 1 15 6  1      1 1                                                  progress                                                                                                               CPU                thread               Linux                                                                                                                                                                                                                                                         CPU                CPU                        API                        epoll      CPU                                                     A                                    API                                                                                                              A                                  routine                                                       CPU                                                         channel                                1 2            scheduler             CPU                                                                                    B                     B                      1                                  2                                                                                                                                     runtime                                                1 3 PC   SP                                     1 3 1 PC        PC   Program Counter    CPU                CPU                  PC   PC   1                                 PC                     goroutine    JMP       G        1 3 2 SP       SP   stack pointer                                         SP            SP                                 SP                 goroutine             goroutine                  goroutine          Linux                                            mmap           Go             mmap          SP                  goroutine               2 GMP                               G     Goroutine                 M               P      G     P            CPU               schedt              G          M       P                          P      M          G     P             G          G               G       P     M   G                  P M                    G      waiting                            channel                    channel            M       P       G      2 1 G g    runtime runtime2 go      G             M    G        G           g      type g struct      Stack parameters     stack describes actual stack memory   stack lo  stack hi      stackguard0 stack pointer compared Go stack growth prologue     stack lo StackGuard normally  StackPreempt trigger preemption     stackguard1 stack pointer compared C stack growth prologue     stack lo StackGuard g0 gsignal stacks      0 goroutine stacks  trigger call morestackc  and crash   stack stack    offset known runtime cgo stackguard0 uintptr    offset known liblink stackguard1 uintptr    offset known liblink panic  panic    innermost panic   offset known liblink defer  defer    innermost defer m  m    current m  offset known arm liblink sched gobuf atomicstatus uint32 goid int64 preempt bool    preemption signal  duplicates stackguard0   stackpreempt preemptStop bool    transition _Gpreempted preemption  otherwise  just deschedule preemptShrink bool    shrink stack synchronous safe point lockedm muintptr     stack G                   Goroutine      stackguar0                G           stackguard0    stackpreempt       G       _panic G    panic     _defer G      defer        m       M   nil       G        sched G                  atomicstatus G      goid G     ID             preempt       lockedm    G      M    runtime LockOSThread      g sched                   gobuf     runtime runtime2 go   type gobuf struct      offsets sp  pc  g known  hard coded in  libmach        ctxt unusual respect GC  may    heap allocated funcval  so GC needs track it     needs set cleared assembly  it s    difficult write barriers  However  ctxt really    saved  live register  ever exchange    real register gobuf  Hence  treat    root during stack scanning  means assembly saves    restores doesn t need write barriers  It s    typed pointer so writes Go    write barriers  sp uintptr pc uintptr g guintptr ctxt unsafe Pointer ret sys Uintreg     sp    G   SP          G        goexit       pc    G   PC       g gobuf     g       ret           2 1 1 G        G        9                        _Gidle  0   G               _Grunnable  1   G                   _Grunning  2   G     M P                  _Gsyscall  3   G                          M      P _Gwaiting  4   G                        G         M P _Gdead  5   G           g         _Gcopystack  6   G                      _Gpreempted  7                     _Gscan  8   GC      G                                2 1 2 G            go               newproc             G      func newproc siz int32  fn  funcval    argp    add unsafe Pointer  fn   sys PtrSize  gp    getg   pc    getcallerpc   systemstack func           g    newg   ",
        "objectID": "posts/language/golang/Go-并发调度总结",
        "date": "2021-01-23T09:45:55.000Z",
        "description": "Go 协程实现，GMP 模型实现，调度算法实现",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "Golang",
            "Golang 原理"
        ],
        "categories": [
            "Golang"
        ]
    },
    {
        "title": "[WIP] Go 调试方法总结",
        "uri": "posts/language/golang/Go-调试方法总结",
        "content": "Golang                                                    1 go pprof Go pprof   Go                          CPU Mem goroutine          Go               go pprof  pprof                          1 1    Go                        pprof         io writer         pprof Profiles          profile        goroutine threadcreate heap allocs block mutex  trace Start     trace Stop                 goroutine      GC    mheap        runtime                      net http pprof            HTTP                                 net http pprof pprof go func init     http HandleFunc   debug pprof    Index  http HandleFunc   debug pprof cmdline   Cmdline  http HandleFunc   debug pprof profile   Profile  http HandleFunc   debug pprof symbol   Symbol  http HandleFunc   debug pprof trace   Trace     debug pprof                     debug pprof cmdline               debug pprof profile        profile       pprof Profiles     debug pprof trace        go runtime          trace Start    1 2         net http pprof    init       HTTP                    net http pprof       HTTP Server                 package main import    net http  _  net http pprof    func main                   HTTP Server            main                  server go func     err    http ListenAndServe  0 0 0 0 12300   nil   err    nil   panic err               1 2 1                    debug pprof                          profile                 allocs                block   cmdline             goroutine     goroutine           heap  heap          mutex   profile         CPU profile                 threadcreate                       cgo       trace             trace                                    profile          go tool profile    go tool trace                        heap                                                          curl               go tool profile  debug profile heap                1 3       go tool pprof      pprof         go tool pprof                                                 top      N          list               traces       goroutine               web                 1 3 1 heap         heap              go tool pprof   web         go tool pprof http   10 9 195 138 12300 debug pprof heap                       heap                                             1 3 2 alloc    heap           heap                heap                             GC                             GC          alloc                 heap                    go tool pprof http   10 9 195 138 12300 debug pprof allocs      1 3 3 goroutine Go                                         goroutine       goroutine                      goroutine           goroutine                        goroutine         go tool profile         go tool pprof http   10 9 195 138 12300 debug pprof goroutine                      goroutine              goroutine                            1 3 4 profile profile            CPU             CPU                                30s         CPU                         go tool pprof http   10 9 195 138 12300 debug pprof profile seconds 30                         1 3 5 trace         trace               go runtime        trace      trace              curl http   10 9 195 138 12300 debug pprof trace  seconds  30   trace out   go tool trace trace out                      Chrome                          View trace                 Goroutine analysis        G                     Network blocking profile             Synchronization blocking   profile            select chan      Syscall blocking profile                      IO       Scheduler latency profile                User defined task   User defined regions   Minimum mutator utilization        GC           CPU           1  View trace     View trace                          W              P     G                            G           Flow events                    G76    Goroutine     P0                 P2                  G                Title G           Start       Wall Duration       Start Stack Trace G           End Stack Trace G               2  Goroutine analysis     Goroutine analysis            G                    2 delve pprof                                    delve  delve     gdb    gdb              goroutine   delve       Go              goroutine",
        "objectID": "posts/language/golang/Go-调试方法总结",
        "date": "2021-02-18T09:54:17.000Z",
        "description": "Golang 常见调试方法归纳总结",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "Golang",
            "Golang 开发"
        ],
        "categories": [
            "Golang"
        ]
    },
    {
        "title": "Linux 网络收发包过程总结",
        "uri": "posts/linux/net/Linux-网络收发包过程总结",
        "content": "Linux                                                    1      1 1         CPU                                   CPU                          IO                        CPU                       interrupt handler                                              CPU         IO          Linux                        1 1 1              hardware interrupt              CPU    CPU                                                              DMA    ringbuffer            CPU   ringbuffer              proc interrupts                 cat  proc interrupts   CPU0 100  15 IR PCI MSI 35651584 edge p2p1 TxRx 0 101  0 IR PCI MSI 35651585 edge p2p1 TxRx 1 102  0 IR PCI MSI 35651586 edge p2p1 TxRx 2 103  0 IR PCI MSI 35651587 edge p2p1 TxRx 3 104  0 IR PCI MSI 35651588 edge p2p1 TxRx 4 105  0 IR PCI MSI 35651589 edge p2p1 TxRx 5 106  0 IR PCI MSI 35651590 edge p2p1 TxRx 6     IRQ            CPU                                                                                        CPU          1 1 2                bottom half                softirq     32                            proc softirqs                              HI   TIMER        NET_TX        NET_RX        BLOCK   IRQ_POLL  TASKLET   tasklet       SCHED        HRTIMER   RCU   RCU   tasklet            32          tasklet                                      work queue                     tasklet                                                                 kworker                       tasklet                 CPU          ksoftirqd                      ksoftirqd n    n   CPU     2     2 1                          TX ring buffer RX ring buffer     DMA                                                          ring buffer                 CPU                   CPU0                        irqbalance service          CPU    2 1 1           ethool  l  L                        CPU                   ethtool  l eth0 Channel parameters eth0  Pre set maximums  RX  0 TX  0 Other  1 Combined  8 Current hardware settings  RX  0 TX  0 Other  1 Combined  7   ethtool  L eth0 combined 8         sys class net  queues                   ls  sys class net eth0 queues  rx 0 rx 1 rx 2 rx 3 rx 4 rx 5 rx 6 rx 7 tx 0 tx 1 tx 2 tx 3 tx 4 tx 5 tx 6 tx 7    proc interrupts               CPU          cat  proc interrupts   grep eth0            CPU    CPU0 62  0 IR PCI MSI 524288 edge eth0 63  0 IR PCI MSI 524289 edge eth0 TxRx 0 64  0 IR PCI MSI 524290 edge eth0 TxRx 1 65  1766 IR PCI MSI 524291 edge eth0 TxRx 2 66  0 IR PCI MSI 524292 edge eth0 TxRx 3 67  0 IR PCI MSI 524293 edge eth0 TxRx 4 68  0 IR PCI MSI 524294 edge eth0 TxRx 5 69  0 IR PCI MSI 524295 edge eth0 TxRx 6 70  0 IR PCI MSI 524296 edge eth0 TxRx 7    ethtool  g  G         ring buffer        ethtool  g eth0 Ring parameters eth0  Pre set maximums  RX  4096 RX Mini  0 RX Jumbo  0 TX  4096 Current hardware settings  RX  256 RX Mini  0 RX Jumbo  0 TX  256 2 1 2               CPU0                            CPU0         proc irq  smpaffinitylist                 CPU     62  70   echo  n  Interrupt  i allowed CPUs    cat  proc irq  i smpaffinitylist  done Interrupt 62 allowed CPUs 4 Interrupt 63 allowed CPUs 8 Interrupt 64 allowed CPUs 13 Interrupt 65 allowed CPUs 21 Interrupt 66 allowed CPUs 6 Interrupt 67 allowed CPUs 31 Interrupt 68 allowed CPUs 5 Interrupt 69 allowed CPUs 2 Interrupt 70 allowed CPUs 31 62 70                CPU         echo       proc irq  smp_affinity         CPU bitmark          CPU     0x1111     CPU 0 3                      irqbalance       CPU                 CPU    irqbalance                                          RPS  2 2                                   packet                  mac                      DMA     packet     ringbuffer ringbuffer                          CPU        CPU                                        NAPI             ringbuffer                   CPU                    CPU              ringbuffer       packet                    packet        ringbuffer     ringbuffer        CPU                  CPU             2 3                                                               sk_buff    TX ringbuff                            CPU           sk_buff                     net_device                                                    3       3 1 net_device            netdevice                   netdevice                   netdevice      namespace      sysfs                 netdevice    ls  sys class net docker0 enp0s3 enp0s8 lo lxcbr0 vethea62395 net_device                            struct net_device   char name IFNAMSIZ      IO      unsigned long mem_end  unsigned long mem_start  unsigned long base_addr  int irq  unsigned long state  struct listhead devlist  int ifindex  const struct netdeviceops  netdev_ops  const struct ethtoolops  ethtoolops  unsigned int flags  unsigned int mtu  unsigned short type  unsigned short hardheaderlen  unsigned char permaddr MAXADDR_LEN   unsigned char addr_len   if ISENABLED CONFIGVLAN_8021Q  struct vlaninfo rcu  vlaninfo   endif                   Interface address info used ethtypetrans      unsigned char  dev_addr  struct netdevrxqueue  _rx  unsigned int numrxqueues  unsigned int rea",
        "objectID": "posts/linux/net/Linux-网络收发包过程总结",
        "date": "2021-02-04T08:29:04.000Z",
        "description": "Linux 网络收发包内核过程总结",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "linux",
            "网络"
        ],
        "categories": [
            "linux"
        ]
    },
    {
        "title": "Linux 存储架构 - VFS 总结",
        "uri": "posts/linux/storage/Linux-存储架构-VFS总结",
        "content": "Linux        VFS                                 1 VFS                Virtual File System                                               IO                             fd    IO       VFS                                       Golang interface VFS              interface             VFS                                   2 VFS                     VFS                                                   VFS             4      superblock                         superblock                       inode                                                       file                         dentry              inode                  2 1 inode inode                                                 inode                                   inode                       fs h struct inode   umodet imode  kuidt iuid  kgidt igid  unsigned int i_flags  const struct inodeoperations  iop  struct superblock  isb  struct addressspace  imapping   ifdef CONFIG_SECURITY void  i_security   endif    Stat data  not accessed path walking    unsigned long i_ino     Filesystems may read i_nlink directly  shall use following functions modification     set clear inc drop _nlink inode inc dec link_count    union   const unsigned int i_nlink  unsigned int _inlink     devt irdev  lofft isize  struct timespec64 i_atime  struct timespec64 i_mtime  struct timespec64 i_ctime  spinlockt ilock     iblocks  ibytes  maybe i_size    unsigned short i_bytes  u8 i_blkbits  u8 iwritehint  blkcntt iblocks   ifdef _NEEDISIZEORDERED seqcountt isize_seqcount   endif    Misc    unsigned long i_state  struct rwsemaphore irwsem  unsigned long dirtied_when     jiffies first dirtying    unsigned long dirtiedtimewhen  struct hlistnode ihash  struct listhead iio_list     backing dev IO list     ifdef CONFIGCGROUPWRITEBACK struct bdiwriteback iwb    associated cgroup wb       foreign inode detection  wbcdetachinode      int iwbfrn_winner  u16 iwbfrnavgtime  u16 iwbfrn_history   endif struct listhead ilru     inode LRU list    struct listhead isb_list  struct listhead iwb_list     backing dev writeback list    union   struct hlisthead identry  struct rcuhead ircu     atomic64t iversion  atomic64t isequence     futex    atomict icount  atomict idio_count  atomict iwritecount   if defined CONFIGIMA     defined CONFIGFILE_LOCKING  atomict ireadcount     struct files open RO     endif union   const struct fileoperations ifop    former   iop  defaultfile_ops    void  free_inode  struct inode       struct filelockcontext  i_flctx  struct addressspace idata  struct listhead idevices  union   struct pipeinodeinfo  i_pipe  struct blockdevice  ibdev  struct cdev  i_cdev  char  i_link  unsigned idirseq     _u32 igeneration  void i_private    fs device private pointer      _randomizelayout  i_mode                        iuid igid       UID   GID  i_flags         i_op inode                      i_sb           superblock     imapping inode         addressspace     mmap      i_ino inode      i_nlink inode       i_rdev inode              dev number major minor   i_size inode          iatime imtime i_ctime                     inode                 i_bytes                       i_blocks                      i_hash inode      hash    i_lru inode     LRU list  i_fop                                                               VFS      inode                                                                      iop ifop             IO      VFS                       i_fop                       2 1 1       inode             inode     inode_operations     fs h struct inode_operations   struct dentry    lookup   struct inode  struct dentry    unsigned int   const char    getlink   struct dentry   struct inode   struct delayedcall    int  permission   struct inode   int   struct posixacl    getacl  struct inode   int   int  readlink   struct dentry   char __user   int   int  create   struct inode  struct dentry    umode_t  bool   int  link   struct dentry  struct inode  struct dentry    int  unlink   struct inode  struct dentry     int  symlink   struct inode  struct dentry  const char    int  mkdir   struct inode  struct dentry   umode_t   int  rmdir   struct inode  struct dentry     int  mknod   struct inode  struct dentry   umodet devt   int  rename   struct inode   struct dentry    struct inode   struct dentry   unsigned int   int  setattr   struct dentry   struct iattr     int  getattr   const struct path   struct kstat    u32  unsigned int   ssizet  listxattr   struct dentry   char    sizet   int  fiemap  struct inode   struct fiemapextentinfo    u64 start  u64 len   int  update_time  struct inode   struct timespec64    int   int  atomic_open  struct inode   struct dentry    struct file    unsigned open_flag  umodet createmode   int  tmpfile   struct inode   struct dentry    umode_t   int  setacl  struct inode   struct posixacl    int     _cachelinealigned                                 lookup    dentry         inode  link unlink     dentry    inode        0         i_op                              2 1 1                              file_operations  struct file_operations   struct module  owner  lofft  llseek   struct",
        "objectID": "posts/linux/storage/Linux-存储架构-VFS总结",
        "date": "2021-03-13T06:29:25.000Z",
        "description": "VFS 的实现",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "linux",
            "storage"
        ],
        "categories": [
            "linux"
        ]
    },
    {
        "title": "SSL/TLS 总结",
        "uri": "posts/net/TLS-总结",
        "content": "TLS                       1      SSL                        Cipher Suite       client   server                                                   RSA DHE_RSA                                AES128CBC                        SHA256       Server     TLSRSAWITHAES256CBCSHA256              RSA   AES256CBC   SHA256         1 1                                                                                                                               1 2                                                                                                                                                                                                                                                                                               TLS            1 3                                                                                                                   2 SSH   TLS         SSH github   ssh        SSH      SSH   Secure Shell                              TLS      SSH           RSA                                                                                                                                                                                        Github   SSH                      2 SSL TLS 2 1 SSL   TLS  TLS   Transport Layer Security     SSL   Secure Sockets Layer                              RFC       SSL 1 0       SSL 2 0   1995   SSL 3 0   1996   RFC 6101 TLS 1 0   1999   RFC 2246 TLS 1 1   2006   RFC 4346 TLS 1 2   2008   RFC 5246 TLS 1 3   2019   RFC 8446   HTTPS     TCP           TLS                2 2 TLS                       ClientHello         TLS      TCP         client                  TLS          server                           TLS                                        session id    session                                               ServerHello              server    client   hello                                                                                TLS                          Certificate              client    ServerKeyExchange             premaster                               DHE_RSA     server                    premaster                 CertificateRequest                            client             HTTPS       server       client                         server     client             Web         client                ServerHelloDone         Certificate     client             5        client              client                 server         ClientKeyExchange            premaster              client      server                premaster                          4               CertificateVerify        client                    server             client         client       7            client                                 server         client   client         Finished              master                                       premaster      client       server     client server       master               client   server               master                        master              master              TLS     client server         master                   2 3                     client server               premaster       8                  master          premaster                                                                  master          3    3 1                                                                                   CA  CA                  CA                                                              CA                              CA             CA             server                               CA           xx crt       xx crs            3 2                                     CA                    server             client              TLS                            openssl genrsa  out root key 2048 openssl req  new  x509  days 3650  key root key  out ca crt    server                  openssl req  newkey rsa 2048  nodes  keyout server key  out server csr openssl x509  req  extfile          TLS        client       CA                      client                                server                       client          client                Blog SSL TLS",
        "objectID": "posts/net/TLS-总结",
        "date": "2021-05-01T15:09:13.000Z",
        "description": "SSL/TLS 总结",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "tags": [
            "网络"
        ],
        "categories": [
            "网络"
        ]
    },
    {
        "title": "认证 Authentication",
        "uri": "posts/security/authentication",
        "content": "Authentication                                                                                                             SSL TLS                                         HTTP                                       Web        1        1 1                digest                                                                                                                                   encryption                                                                                                                                                                                                                                                                                                                                                                            A        B B             A A                                                                                                     signature                                  1 2                                                                                                                                        CA                                                                         Public Key Infrastructure     PKI             CA                       Certificate      CA                 CA          CA                                                                                                                CA         CA                       PKI         X 509                         Version             X 509          3  Version  3  0x2      Serial Number                Serial Number  04 00 00 00 00 01 15 4b 5a c3 94         Signature Algorithm ID                            Signature Algorithm  sha1WithRSAEncryption           Certificate Signature                         Issuer Name             Issuer  C BE  O GlobalSign nv sa  CN GlobalSign Organization Validation CA   SHA256   G2      Validity Period                        Validity Not Before  Nov 21 08 00 00 2020 GMT Not   Nov 22 07 59 59 2021 GMT      Subject                Subject  C CN  ST GuangDong  L Zhuhai  O Awosome Fenix  CN   icyfenix cn      Public Key                          2 HTTP    RFC 7235      HTTP                                   401 Unauthorized            Header         Header                     WWW Authenticate  realm  Proxy Authenticate  realm                             Header                              403 Forbidden       Header       Header     Authorization  Proxy Authorization                                      HTTP Basic        HTTP 1 1 401 Unauthorized Date  Mon  24 Feb 2020 16 50 53 GMT WWW Authenticate  Basic realm  example icyfenix cn           HTTP Basic                                            admin HTTP 1 1 Authorization  Basic aWN5ZmVuaXg6MTIzNDU2                           Basic                             Digest   RFC 7616 HTTP         Basic          Bearer   RFC 6750    OAuth2        HOBA   RFC 7486                 HTTP                            RFC                                  3 Web                                            HTTP                                    Web      Web             2019   3   WebAuthn    WebAuthn                                          USB    NFC",
        "objectID": "posts/security/authentication",
        "date": "2021-10-23T15:20:07.000Z",
        "description": "认证基本概念，基本认证机制",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "lightgallery": true,
        "tags": [
            "security"
        ],
        "categories": [
            "Security"
        ]
    },
    {
        "title": "授权 Authorization",
        "uri": "posts/security/authorization",
        "content": "OAuth2   SAML 2 0                DAC ABAC   RBAC  1 RBAC 2 OAuth 2 OAuth 2    RFC 6749                      Third Party Application                                                                               OAuth 2         OAuth 2                       Token                                                                                     2 1            Third Party Application                           Authorization Server                            Resource Server                            Resource Owner                  User Agent                      HTTPClient                                  2 2                Authorization Code                                                                          ClientID   ClientSecret                                                  ClientID                 URI                 ClientID                                                    1       URI                                                     ClientSecret                                       ClientSecret                                                     2 3                  Implicit                         3 4 5                                                                                                   RFC 6749              URI   Fragment      2 4              Resource Owner Password Credentials                                             2 5                Client Credentials",
        "objectID": "posts/security/authorization",
        "date": "2021-10-24T09:05:39.000Z",
        "description": "RBAC、OAuth2",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "lightgallery": true,
        "tags": [
            "security"
        ],
        "categories": [
            "Security"
        ]
    },
    {
        "title": "凭证 Credential",
        "uri": "posts/security/credentials",
        "content": "Credential                Cookie Session   JWT  1 Cookie Session HTTP               Web                              HTTP                    RFC 6265     HTTP           HTTP        Set Cookie     Set Cookie                                    HTTP         Cookie   Header                 Cookie           Set Cookie  id icyfenix  Expires Wed  21 Feb 2020 07 28 00 GMT  Secure  HttpOnly                    Cookie Header      index html HTTP 2 0 Host  icyfenix cn Cookie  id icyfenix               Cookie                   Cookie   HTTP Header      Cookie       session id       session id                                                      Session Cookie Session                                                                                Session           Cookie Session                                               Cookie Session                                                        Session                      Session                           Session          2 JWT   Cookie Session                                                                                                    JWT JSON Web Token                                    JWT                                    JWT               Authorization   Header               Bearer       restful products 1 HTTP 1 1 Host  icyfenix cn Connection  keep alive Authorization  Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9 eyJ1c2VyX25hbWUiOiJpY3lmZW5peCIsInNjb3BlIjpbIkFMTCJdLCJleHAiOjE1ODQ5NDg5NDcsImF1dGhvcml0aWVzIjpbIlJPTEVfVVNFUiIsIlJPTEVfQURNSU4iXSwianRpIjoiOWQ3NzU4NmEtM2Y0Zi00Y2JiLTk5MjQtZmUyZjc3ZGZhMzNkIiwiY2xpZW50X2lkIjoiYm9va3N0b3JlX2Zyb250ZW5kIiwidXNlcm5hbWUiOiJpY3lmZW5peCJ9 539WMzbjv63wBtx4ytYYwFo1ECG9vsgAn8bheflL8 2 1 JWT     JWT       Base64              JSON                                          Header     alg    HS256    typ    JWT    alg         typ              Payload                       username    icyfenix    authorities      ROLE_USER    ROLE_ADMIN      scope      ALL      exp   1584948947   jti    9d77586a 3f4f 4cbb 9924 fe2f77dfa33d    clientid    bookstorefrontend    JWT RFC           iss Issuer        exp Expiration Time           sub Subject       aud Audience         nbf Not Before           iat Issued At           jti JWT ID      ID        Signature    Header                                         JWT                                                                                        Session",
        "objectID": "posts/security/credentials",
        "date": "2021-10-25T13:16:57.000Z",
        "description": "Cookie、Session、JWT",
        "weight": 4,
        "draft": false,
        "author": "Shiori",
        "lightgallery": true,
        "tags": [
            "security"
        ],
        "categories": [
            "Security"
        ]
    }
]